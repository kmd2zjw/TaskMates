[{"/Users/alexkim/Databases/TaskMates/frontend/src/index.js":"1","/Users/alexkim/Databases/TaskMates/frontend/src/App.js":"2","/Users/alexkim/Databases/TaskMates/frontend/src/context/authContext.js":"3","/Users/alexkim/Databases/TaskMates/frontend/src/components/index.js":"4","/Users/alexkim/Databases/TaskMates/frontend/src/pages/index.js":"5","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Home.jsx":"6","/Users/alexkim/Databases/TaskMates/frontend/src/components/Footer.jsx":"7","/Users/alexkim/Databases/TaskMates/frontend/src/components/Navbar.jsx":"8","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Login.jsx":"9","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Register.jsx":"10","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Profile.jsx":"11","/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateOrg.jsx":"12","/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateTask.jsx":"13","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx":"14","/Users/alexkim/Databases/TaskMates/frontend/src/components/OrgTiles.jsx":"15","/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/index.js":"16","/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/AppWrap.js":"17","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Task.jsx":"18","/Users/alexkim/Databases/TaskMates/frontend/src/components/UserTodoList.jsx":"19"},{"size":826,"mtime":1682709394807,"results":"20","hashOfConfig":"21"},{"size":1234,"mtime":1682698551827,"results":"22","hashOfConfig":"21"},{"size":768,"mtime":1682530739402,"results":"23","hashOfConfig":"21"},{"size":92,"mtime":1682530739401,"results":"24","hashOfConfig":"21"},{"size":386,"mtime":1682698551828,"results":"25","hashOfConfig":"21"},{"size":1501,"mtime":1682709344978,"results":"26","hashOfConfig":"21"},{"size":145,"mtime":1682530739401,"results":"27","hashOfConfig":"21"},{"size":3380,"mtime":1682530739401,"results":"28","hashOfConfig":"21"},{"size":2015,"mtime":1682530739589,"results":"29","hashOfConfig":"21"},{"size":2933,"mtime":1682530739589,"results":"30","hashOfConfig":"21"},{"size":4036,"mtime":1682709906444,"results":"31","hashOfConfig":"21"},{"size":2079,"mtime":1682530739589,"results":"32","hashOfConfig":"21"},{"size":2902,"mtime":1682530739589,"results":"33","hashOfConfig":"21"},{"size":2488,"mtime":1682703332804,"results":"34","hashOfConfig":"21"},{"size":1135,"mtime":1682698551827,"results":"35","hashOfConfig":"21"},{"size":47,"mtime":1682530739590,"results":"36","hashOfConfig":"21"},{"size":407,"mtime":1682530739590,"results":"37","hashOfConfig":"21"},{"size":1741,"mtime":1682698551828,"results":"38","hashOfConfig":"21"},{"size":1024,"mtime":1682704447179,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u11d2n",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},"/Users/alexkim/Databases/TaskMates/frontend/src/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/App.js",["105","106","107","108"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/context/authContext.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Home.jsx",["109","110","111","112","113","114","115","116","117"],[],"import React, {useContext, useState} from \"react\";\nimport { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {AuthContext} from \"../context/authContext\"\nimport Button from \"@mui/material/Button\";\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport image from \"../img/4907157.jpg\";\nimport { AppWrap } from '../wrapper';\nimport OrgTiles from \"../components/OrgTiles\"\nimport UserTodoList from \"../components/UserTodoList\"\n\nconst Home = () => {\n    const [err, setError] = useState(null);\n    const [orgs, setOrgs] = useState([]);\n    const { currentUser, logout } = useContext(AuthContext);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const res = await axios.get(\"/\");\n                setOrgs(res.data);\n            } catch(err) {\n                console.log(err);\n            }\n        };\n        fetchData();\n    }, [currentUser]);\n    //console.log(currentUser.id)\n\n    return (\n        <Box className=\"homepage\">\n            {/* <div className=\"orgs\">\n                {orgs.map((org) => (\n                    <div className=\"org\" key={org.groupId}>\n                        <div>title</div>\n                    </div>\n                ))}\n            </div> */}\n            <UserTodoList className=\"app__element\"></UserTodoList>\n            <OrgTiles className=\"app__element\"/>\n        </Box>\n\n    )\n}\n\nexport default AppWrap(Home, \"Home\");\n",[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/Footer.jsx",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/Navbar.jsx",["118","119"],[],"import {useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {AuthContext} from \"../context/authContext\"\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container'\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport TaskIcon from '@mui/icons-material/Task';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nconst Navbar = () => {\n    const { currentUser, logout } = useContext(AuthContext);\n    const darkTheme = createTheme({\n        palette: {\n            mode: 'dark',\n        },\n    });\n\n\n    return (\n        <Box sx={{ flexGrow: 1}}>\n            <ThemeProvider theme={darkTheme}>\n                <AppBar position=\"fixed\" sx={{color: ''}}>\n                    <Toolbar variant=\"dense\">\n                        <Box sx={{marginRight: \"auto\", display: 'flex', flexDirection: 'row',  justifyContent: \"flex-end\"}}>\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\n                                <TaskIcon />\n                            </IconButton>\n\n                            <Link to=\"../\" className=\"app__button-text\" style={{color: 'white'}}>\n                                <Button sx={{ color: '#fff' }}>\n                                    <Typography  variant=\"h6\" color=\"inherit\" component=\"div\">\n                                        TaskMates\n                                    </Typography>\n                                </Button>\n                            </Link>\n                        </Box>\n                        <Box style={{margin: 'auto'}}>\n                            {currentUser ? (\n                                <Typography>Welcome to TaskMates, {currentUser?.first_name}!</Typography>\n                            ) : (\n                                <Typography>Welcome to TaskMates!</Typography>\n                            )}\n                        </Box>\n                        <Box sx={{marginLeft: \"auto\", display: 'flex', flexDirection: 'row'}}>\n                                    <Link className=\"link\" to =\"/profile\">\n                                        <Button sx={{ color: '#fff' }}>\n                                        <Typography>Profile</Typography>\n                                        </Button>\n                                    </Link>\n\n                                {currentUser ? (\n                                    <Button sx={{ color: '#fff' }} onClick={logout}>\n                                        <Typography>Logout</Typography>\n                                    </Button>\n                                ) : (\n                                        <Link className=\"link\" to=\"/login\">\n                                            <Button sx={{ color: '#fff' }}>\n                                            <Typography>Login</Typography>\n                                            </Button>\n                                        </Link>\n                                )}\n                        </Box>\n                    </Toolbar>\n                </AppBar>\n            </ThemeProvider>\n        </Box>\n    )\n}\n\nexport default Navbar","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Login.jsx",["120"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/authContext\";\nimport Input from '@mui/material/Input';\nimport Typography from '@mui/material/Typography';\nimport Button from \"@mui/material/Button\";\n\nconst Login = () => {\n    const [inputs, setInputs] = useState({\n        email: \"\",\n        password: \"\",\n      });\n      const [err, setError] = useState(null);\n    \n      const navigate = useNavigate();\n    \n      const { login } = useContext(AuthContext);\n    \n    \n      const handleChange = (e) => {\n        setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n      };\n    \n      const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          await login(inputs)\n          navigate(\"/\");\n        } catch (err) {\n          setError(err.response.data);\n        }\n      };\n\n      return (\n        <div className=\"auth\">\n          <Typography variant=\"h2\">Login</Typography>\n          <form>\n            <Input\n              type=\"text\" required T\n              placeholder='Email'\n              className=\"app__form-element\"\n              name=\"email\"\n              onChange={handleChange}\n            />\n            <Input\n              type=\"password\" required T\n              placeholder=\"Password\"\n              name=\"password\"\n              className=\"app__form-element\"\n              onChange={handleChange}\n            />\n            <Button variant='outlined' className=\"app__form-element\" sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleSubmit}>Login</Button>\n            {err && <p>{err}</p>}\n            <span><Typography>\n              Don't have an account yet?\n            </Typography> <Link to=\"/register\" style={{textDecoration: 'none', color:\"purple\"}}><Typography variant=\"h5\">Register</Typography></Link></span>\n          </form>\n        </div>\n      )\n    }\n    \n\nexport default Login;","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Register.jsx",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Profile.jsx",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateOrg.jsx",["121"],[],"import React, {useContext, useState} from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport Button from \"@mui/material/Button\";\nimport {AuthContext} from \"../context/authContext\"\n\n\nconst CreateOrg = () => {\n    const { currentUser, logout } = useContext(AuthContext);\n    const state = useLocation().state;\n    const [name, setName] = useState(state?.name || \"\");\n    const userID = currentUser.userID;\n    const navigate = useNavigate()\n\n    const handleClick = async (e) => {\n        e.preventDefault();\n    \n        try {\n          // state\n            /*?*/ await axios.post(`/orgs/create`, {\n                name, userID,\n              })\n            // : await axios.post(`/org/create`, {\n            //     name,\n            //   });\n            navigate(\"/\")\n        } catch (err) {\n          console.log(err);\n        }\n    };\n\n    return (\n        <Box>\n            <Box style={{display:\"flex\",\n                justifyContent:\"center\",\n                alignItems:\"center\",\n                minHeight:\"80vh\",\n                flexDirection:'column',\n                overflow: \"hidden\",\n            }}>\n\n                <Typography  variant=\"h4\">Create a New Organization</Typography>\n                <form>\n                    <Box sx={{pt: 8}}>\n                        <Input\n                            type=\"text\" required T\n                            placeholder='Organization Name'\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </Box>\n                <Box sx={{pt: 2}} className=\"button\">\n                    <Button variant='outlined' sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleClick}>Create Organization</Button>\n                </Box>\n                </form>\n            </Box>\n        </Box>\n    )\n}\n\nexport default AppWrap(CreateOrg, 'CreateOrg');","/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateTask.jsx",["122"],[],"import React, {useState} from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport Button from \"@mui/material/Button\";\nimport image from \"../img/4907157.jpg\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\"\n\nconst CreateTask = () => {\n    const state = useLocation().state;\n    const [name, setName] = useState(state?.name || \"\");\n    const [description, setDescription] = useState(state?.description || \"\");\n    const [dueDate, setDueDate] = useState(new Date());\n\n    const location = useLocation();\n    const navigate = useNavigate();\n    const orgId = location.pathname.split(\"/\")[2];\n    \n    const handleClick = async (e) => {\n        e.preventDefault();\n        try {\n            await axios.post(`/tasks/addTask`, {\n                name, description, date: moment(dueDate).format(\"YYYY-MM-DD HH:mm:ss\"), orgId,\n              })\n            navigate(`/orgs/${orgId}`)\n        } catch (err) {\n          console.log(err);\n        }\n    };\n\n    return (\n        <Box>\n            <Box style={{display:\"flex\",\n                justifyContent:\"center\",\n                alignItems:\"center\",\n                minHeight:\"80vh\",\n                flexDirection:'column',\n                overflow: \"hidden\",\n            }}>\n\n                <Typography  variant=\"h4\">Create a New Task</Typography>\n                <form>\n                    <Box sx={{pt: 8}}>\n                        <Input\n                            type=\"text\" required T\n                            placeholder='Task Name'\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </Box>\n                    <Box sx={{pt: 2}}>\n                        <Input\n                            type=\"text\" required T\n                            placeholder='Task Description'\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                    </Box>\n\n                    <DatePicker\n                        showTimeSelect\n                        dateFormat=\"MMMM d, yyyy h:mmaa\"\n                        selected={dueDate}\n                        selectsStart\n                        minDate = {Date.now()}\n                        onChange={date => setDueDate(date)}\n                    />\n\n                    <Box sx={{pt: 2}} className=\"button\">\n                        <Button variant='outlined' sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleClick}>Create Task</Button>\n                    </Box>\n                </form>\n            </Box>\n        </Box>\n    )\n\n}\n\nexport default AppWrap(CreateTask, 'CreateTask');","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx",["123","124","125","126"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/OrgTiles.jsx",["127","128","129","130"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/AppWrap.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Task.jsx",["131","132","133","134"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/UserTodoList.jsx",["135","136","137","138"],[],"import React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Typography from '@mui/material/Typography';\nimport Button from \"@mui/material/Button\";\n\nconst UserTodoList = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/tasks/getUserTasks`);\n        \n        setTasks(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  });\n\n  return (\n    <div className=\"UserTodoList\">\n      <Typography variant=\"h3\">Your TODO List: </Typography>\n      {tasks.map((task) => (\n        <div className=\"todoTask\" key={task.taskID}>\n          <div className=\"name\">  {task.task_name} </div>\n          <div className=\"name\">  {task.due_date} </div>\n          <div className=\"name\">  {task.description} </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default UserTodoList;",[],{"ruleId":"139","severity":1,"message":"140","line":4,"column":3,"nodeType":"141","messageId":"142","endLine":4,"endColumn":16},{"ruleId":"139","severity":1,"message":"143","line":5,"column":3,"nodeType":"141","messageId":"142","endLine":5,"endColumn":9},{"ruleId":"139","severity":1,"message":"144","line":9,"column":10,"nodeType":"141","messageId":"142","endLine":9,"endColumn":16},{"ruleId":"139","severity":1,"message":"145","line":9,"column":18,"nodeType":"141","messageId":"142","endLine":9,"endColumn":24},{"ruleId":"139","severity":1,"message":"146","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":14},{"ruleId":"139","severity":1,"message":"147","line":3,"column":16,"nodeType":"141","messageId":"142","endLine":3,"endColumn":27},{"ruleId":"139","severity":1,"message":"148","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":14},{"ruleId":"139","severity":1,"message":"149","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":18},{"ruleId":"139","severity":1,"message":"150","line":9,"column":8,"nodeType":"141","messageId":"142","endLine":9,"endColumn":13},{"ruleId":"139","severity":1,"message":"151","line":15,"column":12,"nodeType":"141","messageId":"142","endLine":15,"endColumn":15},{"ruleId":"139","severity":1,"message":"152","line":15,"column":17,"nodeType":"141","messageId":"142","endLine":15,"endColumn":25},{"ruleId":"139","severity":1,"message":"153","line":16,"column":12,"nodeType":"141","messageId":"142","endLine":16,"endColumn":16},{"ruleId":"139","severity":1,"message":"154","line":17,"column":26,"nodeType":"141","messageId":"142","endLine":17,"endColumn":32},{"ruleId":"139","severity":1,"message":"155","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":17},{"ruleId":"139","severity":1,"message":"156","line":11,"column":8,"nodeType":"141","messageId":"142","endLine":11,"endColumn":16},{"ruleId":"139","severity":1,"message":"157","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"154","line":13,"column":26,"nodeType":"141","messageId":"142","endLine":13,"endColumn":32},{"ruleId":"139","severity":1,"message":"150","line":9,"column":8,"nodeType":"141","messageId":"142","endLine":9,"endColumn":13},{"ruleId":"139","severity":1,"message":"158","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":14},{"ruleId":"139","severity":1,"message":"159","line":15,"column":11,"nodeType":"141","messageId":"142","endLine":15,"endColumn":19},{"ruleId":"139","severity":1,"message":"160","line":19,"column":13,"nodeType":"141","messageId":"142","endLine":19,"endColumn":24},{"ruleId":"161","severity":1,"message":"162","line":37,"column":24,"nodeType":"163","messageId":"164","endLine":37,"endColumn":26},{"ruleId":"139","severity":1,"message":"165","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":27},{"ruleId":"139","severity":1,"message":"146","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":14},{"ruleId":"139","severity":1,"message":"147","line":3,"column":16,"nodeType":"141","messageId":"142","endLine":3,"endColumn":27},{"ruleId":"139","severity":1,"message":"148","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":14},{"ruleId":"139","severity":1,"message":"146","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"165","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":20},{"ruleId":"139","severity":1,"message":"166","line":6,"column":10,"nodeType":"141","messageId":"142","endLine":6,"endColumn":21},{"ruleId":"139","severity":1,"message":"158","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":14},{"ruleId":"139","severity":1,"message":"165","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":27},{"ruleId":"139","severity":1,"message":"146","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":14},{"ruleId":"139","severity":1,"message":"147","line":3,"column":16,"nodeType":"141","messageId":"142","endLine":3,"endColumn":27},{"ruleId":"139","severity":1,"message":"148","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":14},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Outlet' is defined but never used.","'Footer' is defined but never used.","'Navbar' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'image' is defined but never used.","'err' is assigned a value but never used.","'setError' is assigned a value but never used.","'orgs' is assigned a value but never used.","'logout' is assigned a value but never used.","'Container' is defined but never used.","'MenuIcon' is defined but never used.","'axios' is defined but never used.","'moment' is defined but never used.","'navigate' is assigned a value but never used.","'currentUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useContext' is defined but never used.","'AuthContext' is defined but never used."]