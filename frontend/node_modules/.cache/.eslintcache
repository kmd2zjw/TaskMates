[{"/Users/alexkim/Databases/TaskMates/frontend/src/index.js":"1","/Users/alexkim/Databases/TaskMates/frontend/src/App.js":"2","/Users/alexkim/Databases/TaskMates/frontend/src/context/authContext.js":"3","/Users/alexkim/Databases/TaskMates/frontend/src/components/index.js":"4","/Users/alexkim/Databases/TaskMates/frontend/src/pages/index.js":"5","/Users/alexkim/Databases/TaskMates/frontend/src/components/Navbar.jsx":"6","/Users/alexkim/Databases/TaskMates/frontend/src/components/Footer.jsx":"7","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Home.jsx":"8","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Login.jsx":"9","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Profile.jsx":"10","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Register.jsx":"11","/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateOrg.jsx":"12","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx":"13","/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateTask.jsx":"14","/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/index.js":"15","/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/AppWrap.js":"16"},{"size":823,"mtime":1682480195576,"results":"17","hashOfConfig":"18"},{"size":1161,"mtime":1682480195575,"results":"19","hashOfConfig":"18"},{"size":768,"mtime":1682480195576,"results":"20","hashOfConfig":"18"},{"size":92,"mtime":1682480195575,"results":"21","hashOfConfig":"18"},{"size":346,"mtime":1682480195578,"results":"22","hashOfConfig":"18"},{"size":3380,"mtime":1682480195575,"results":"23","hashOfConfig":"18"},{"size":145,"mtime":1682480195575,"results":"24","hashOfConfig":"18"},{"size":2131,"mtime":1682481409181,"results":"25","hashOfConfig":"18"},{"size":2015,"mtime":1682480536630,"results":"26","hashOfConfig":"18"},{"size":123,"mtime":1682480195578,"results":"27","hashOfConfig":"18"},{"size":2933,"mtime":1682480850053,"results":"28","hashOfConfig":"18"},{"size":2081,"mtime":1682481519413,"results":"29","hashOfConfig":"18"},{"size":180,"mtime":1682480195578,"results":"30","hashOfConfig":"18"},{"size":2083,"mtime":1682481762694,"results":"31","hashOfConfig":"18"},{"size":47,"mtime":1682481141424,"results":"32","hashOfConfig":"18"},{"size":407,"mtime":1682481477863,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u11d2n",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexkim/Databases/TaskMates/frontend/src/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/App.js",["87","88","89","90"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/context/authContext.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/Navbar.jsx",["91","92"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/Footer.jsx",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Home.jsx",["93","94","95","96","97","98"],[],"import React, {useContext, useState} from \"react\";\nimport { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {AuthContext} from \"../context/authContext\"\nimport Button from \"@mui/material/Button\";\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport image from \"../img/4907157.jpg\";\nimport { AppWrap } from '../wrapper';\n\nconst Home = () => {\n    const [err, setError] = useState(null);\n    const [orgs, setOrgs] = useState([]);\n    const { currentUser, logout } = useContext(AuthContext);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const res = await axios.get(\"/\");\n                setOrgs(res.data);\n            } catch(err) {\n                console.log(err);\n            }\n        };\n        fetchData();\n    }, [currentUser]);\n    //console.log(currentUser.id)\n\n    return (\n        <Box>\n            {/* <div className=\"orgs\">\n                {orgs.map((org) => (\n                    <div className=\"org\" key={org.groupId}>\n                        <div>title</div>\n                    </div>\n                ))}\n            </div> */}\n            <Box style={{display:\"flex\",\n                justifyContent:\"center\",\n                alignItems:\"center\",\n                minHeight:\"80vh\",\n            }}>\n                <Link to=\"./createorg\">\n                    <Button variant=\"outlined\" sx={{ color: '#212121', borderColor: '#212121' }} className=\"createOrg\">\n                            <Typography>\n                                Create Organization\n                            </Typography>\n                    </Button>\n                </Link>\n                <Link to=\"./createtask\">\n                    <Button variant=\"outlined\" sx={{ color: '#212121', borderColor: '#212121' }} className=\"createOrg\">\n                        <Typography>\n                            Create Task\n                        </Typography>\n                    </Button>\n                </Link>\n\n            </Box>\n        </Box>\n\n    )\n}\n\nexport default AppWrap(Home, \"Home\");",[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Login.jsx",["99"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/authContext\";\nimport Input from '@mui/material/Input';\nimport Typography from '@mui/material/Typography';\nimport Button from \"@mui/material/Button\";\n\nconst Login = () => {\n    const [inputs, setInputs] = useState({\n        email: \"\",\n        password: \"\",\n      });\n      const [err, setError] = useState(null);\n    \n      const navigate = useNavigate();\n    \n      const { login } = useContext(AuthContext);\n    \n    \n      const handleChange = (e) => {\n        setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n      };\n    \n      const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          await login(inputs)\n          navigate(\"/\");\n        } catch (err) {\n          setError(err.response.data);\n        }\n      };\n\n      return (\n        <div className=\"auth\">\n          <Typography variant=\"h2\">Login</Typography>\n          <form>\n            <Input\n              type=\"text\" required T\n              placeholder='Email'\n              className=\"app__form-element\"\n              name=\"email\"\n              onChange={handleChange}\n            />\n            <Input\n              type=\"password\" required T\n              placeholder=\"Password\"\n              name=\"password\"\n              className=\"app__form-element\"\n              onChange={handleChange}\n            />\n            <Button variant='outlined' className=\"app__form-element\" sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleSubmit}>Login</Button>\n            {err && <p>{err}</p>}\n            <span><Typography>\n              Don't have an account yet?\n            </Typography> <Link to=\"/register\" style={{textDecoration: 'none', color:\"purple\"}}><Typography variant=\"h5\">Register</Typography></Link></span>\n          </form>\n        </div>\n      )\n    }\n    \n\nexport default Login;","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Profile.jsx",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Register.jsx",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateOrg.jsx",["100"],[],"import React, {useContext, useState} from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport Button from \"@mui/material/Button\";\nimport {AuthContext} from \"../context/authContext\"\n\n\nconst CreateOrg = () => {\n    const { currentUser, logout } = useContext(AuthContext);\n    const state = useLocation().state;\n    const [name, setName] = useState(state?.name || \"\");\n    const userID = currentUser.userID;\n    const navigate = useNavigate()\n\n    const handleClick = async (e) => {\n        e.preventDefault();\n    \n        try {\n          // state\n            /*?*/ await axios.post(`/orgs/create`, {\n                name, userID,\n              })\n            // : await axios.post(`/org/create`, {\n            //     name,\n            //   });\n            navigate(\"/\")\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n    return (\n        <Box>\n            <Box style={{display:\"flex\",\n                justifyContent:\"center\",\n                alignItems:\"center\",\n                minHeight:\"80vh\",\n                flexDirection:'column',\n                overflow: \"hidden\",\n            }}>\n\n                <Typography  variant=\"h4\">Create a New Organization</Typography>\n                <form>\n                    <Box sx={{pt: 8}}>\n                        <Input\n                            type=\"text\" required T\n                            placeholder='Organization Name'\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </Box>\n                <Box sx={{pt: 2}} className=\"button\">\n                    <Button variant='outlined' sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleClick}>Create Organization</Button>\n                </Box>\n                </form>\n            </Box>\n        </Box>\n    )\n}\n\nexport default AppWrap(CreateOrg, 'CreateOrg');","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateTask.jsx",["101","102","103","104","105"],[],"import React, {useState} from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport Button from \"@mui/material/Button\";\nimport image from \"../img/4907157.jpg\";\n\nconst CreateTask = () => {\n    const state = useLocation().state;\n    const [name, setName] = useState(state?.name || \"\");\n    const [description, setDescription] = useState(state?.description || \"\");\n    const [dueDate, setDueDate] = useState(new Date());\n    const handleClick = async (e) => {\n        //TODO\n        console.log(name);\n        console.log(description);\n    };\n\n    return (\n        <Box>c\n            <Box style={{display:\"flex\",\n                justifyContent:\"center\",\n                alignItems:\"center\",\n                minHeight:\"80vh\",\n                flexDirection:'column',\n                overflow: \"hidden\",\n            }}>\n\n                <Typography  variant=\"h4\">Create a New Task</Typography>\n                <form>\n                    <Box sx={{pt: 8}}>\n                        <Input\n                            type=\"text\" required T\n                            placeholder='Task Name'\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </Box>\n                    <Box sx={{pt: 2}}>\n                        <Input\n                            type=\"text\" required T\n                            placeholder='Task Description'\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                    </Box>\n\n                    <Box sx={{pt: 2}} className=\"button\">\n                        <Button variant='outlined' sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleClick}>Create Task</Button>\n                    </Box>\n                </form>\n            </Box>\n        </Box>\n    )\n\n}\n\nexport default AppWrap(CreateTask, 'CreateTask');","/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/AppWrap.js",[],[],{"ruleId":"106","severity":1,"message":"107","line":4,"column":3,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":5,"column":3,"nodeType":"108","messageId":"109","endLine":5,"endColumn":9},{"ruleId":"106","severity":1,"message":"111","line":9,"column":10,"nodeType":"108","messageId":"109","endLine":9,"endColumn":16},{"ruleId":"106","severity":1,"message":"112","line":9,"column":18,"nodeType":"108","messageId":"109","endLine":9,"endColumn":24},{"ruleId":"106","severity":1,"message":"113","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":17},{"ruleId":"106","severity":1,"message":"114","line":11,"column":8,"nodeType":"108","messageId":"109","endLine":11,"endColumn":16},{"ruleId":"106","severity":1,"message":"115","line":3,"column":16,"nodeType":"108","messageId":"109","endLine":3,"endColumn":27},{"ruleId":"106","severity":1,"message":"116","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":13},{"ruleId":"106","severity":1,"message":"117","line":13,"column":12,"nodeType":"108","messageId":"109","endLine":13,"endColumn":15},{"ruleId":"106","severity":1,"message":"118","line":13,"column":17,"nodeType":"108","messageId":"109","endLine":13,"endColumn":25},{"ruleId":"106","severity":1,"message":"119","line":14,"column":12,"nodeType":"108","messageId":"109","endLine":14,"endColumn":16},{"ruleId":"106","severity":1,"message":"120","line":15,"column":26,"nodeType":"108","messageId":"109","endLine":15,"endColumn":32},{"ruleId":"106","severity":1,"message":"121","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"120","line":13,"column":26,"nodeType":"108","messageId":"109","endLine":13,"endColumn":32},{"ruleId":"106","severity":1,"message":"122","line":2,"column":23,"nodeType":"108","messageId":"109","endLine":2,"endColumn":34},{"ruleId":"106","severity":1,"message":"121","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":13},{"ruleId":"106","severity":1,"message":"116","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":13},{"ruleId":"106","severity":1,"message":"123","line":15,"column":12,"nodeType":"108","messageId":"109","endLine":15,"endColumn":19},{"ruleId":"106","severity":1,"message":"124","line":15,"column":21,"nodeType":"108","messageId":"109","endLine":15,"endColumn":31},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Outlet' is defined but never used.","'Footer' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","'MenuIcon' is defined but never used.","'useLocation' is defined but never used.","'image' is defined but never used.","'err' is assigned a value but never used.","'setError' is assigned a value but never used.","'orgs' is assigned a value but never used.","'logout' is assigned a value but never used.","'axios' is defined but never used.","'useNavigate' is defined but never used.","'dueDate' is assigned a value but never used.","'setDueDate' is assigned a value but never used."]