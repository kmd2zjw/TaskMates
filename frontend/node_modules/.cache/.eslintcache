[{"/Users/alexkim/Databases/TaskMates/frontend/src/index.js":"1","/Users/alexkim/Databases/TaskMates/frontend/src/App.js":"2","/Users/alexkim/Databases/TaskMates/frontend/src/context/authContext.js":"3","/Users/alexkim/Databases/TaskMates/frontend/src/components/index.js":"4","/Users/alexkim/Databases/TaskMates/frontend/src/pages/index.js":"5","/Users/alexkim/Databases/TaskMates/frontend/src/components/Navbar.jsx":"6","/Users/alexkim/Databases/TaskMates/frontend/src/components/Footer.jsx":"7","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Home.jsx":"8","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Login.jsx":"9","/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateOrg.jsx":"10","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Register.jsx":"11","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Task.jsx":"12","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Profile.jsx":"13","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx":"14","/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateTask.jsx":"15","/Users/alexkim/Databases/TaskMates/frontend/src/components/NotificationsPanel.jsx":"16","/Users/alexkim/Databases/TaskMates/frontend/src/components/UserTodoList.jsx":"17","/Users/alexkim/Databases/TaskMates/frontend/src/components/OrgTiles.jsx":"18","/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/index.js":"19","/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/AppWrap.js":"20","/Users/alexkim/Databases/TaskMates/frontend/src/pages/EditProfile.jsx":"21"},{"size":826,"mtime":1682902067124,"results":"22","hashOfConfig":"23"},{"size":1315,"mtime":1682903678431,"results":"24","hashOfConfig":"23"},{"size":808,"mtime":1682902066796,"results":"25","hashOfConfig":"23"},{"size":92,"mtime":1682902066796,"results":"26","hashOfConfig":"23"},{"size":442,"mtime":1682902779589,"results":"27","hashOfConfig":"23"},{"size":3992,"mtime":1682902066795,"results":"28","hashOfConfig":"23"},{"size":145,"mtime":1682902066795,"results":"29","hashOfConfig":"23"},{"size":1501,"mtime":1682902067124,"results":"30","hashOfConfig":"23"},{"size":2015,"mtime":1682904866650,"results":"31","hashOfConfig":"23"},{"size":2079,"mtime":1682902067124,"results":"32","hashOfConfig":"23"},{"size":2933,"mtime":1682904496381,"results":"33","hashOfConfig":"23"},{"size":1741,"mtime":1682902457393,"results":"34","hashOfConfig":"23"},{"size":4836,"mtime":1682903517564,"results":"35","hashOfConfig":"23"},{"size":7696,"mtime":1682904043279,"results":"36","hashOfConfig":"23"},{"size":3049,"mtime":1682902067124,"results":"37","hashOfConfig":"23"},{"size":1691,"mtime":1682902066796,"results":"38","hashOfConfig":"23"},{"size":1219,"mtime":1682902066796,"results":"39","hashOfConfig":"23"},{"size":1139,"mtime":1682902066796,"results":"40","hashOfConfig":"23"},{"size":47,"mtime":1682902067126,"results":"41","hashOfConfig":"23"},{"size":407,"mtime":1682902067126,"results":"42","hashOfConfig":"23"},{"size":3050,"mtime":1682905973136,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u11d2n",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"/Users/alexkim/Databases/TaskMates/frontend/src/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/App.js",["114","115","116","117"],[],"import {\n  createBrowserRouter,\n  RouterProvider,\n  BrowserRouter,\n  Outlet,\n} from \"react-router-dom\";\n\nimport { Home, Login, Profile, EditProfile, Register, Organizations, CreateOrg, CreateTask, Task } from './pages';\nimport { Footer, Navbar } from './components';\nimport './style.scss';\n/*\nconst Layout = () => {\n  return (\n    <>\n      <Navbar/>\n      <Outlet/>\n      <Footer/>\n    </>\n  );\n};*/\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Home/>,\n    /*children: [\n      {\n        path:\"/\",\n        element: <Login/>\n      },\n      {\n        path:\"/home\",\n        element: <Home/>\n      },\n    ]*/\n  },\n  {\n    path: \"/register\",\n    element: <Register/>,\n  },\n  {\n    path:\"/home\",\n    element: <Home/>\n  },\n  {\n    path: \"/login\",\n    element: <Login/>,\n  },\n  {\n    path: \"/profile\",\n    element: <Profile/>,\n  },\n  {\n    path: \"/editprofile/:id\",\n    element: <EditProfile/>,\n  },\n  {\n    path: \"/orgs/:id\",\n    element: <Organizations/>,\n  },\n  {\n    path: \"/createorg\",\n    element: <CreateOrg/>,\n  },\n  {\n    path: \"/orgs/:id/createtask\",\n    element: <CreateTask/>\n  },\n  {\n    path: \"/orgs/:id/task/:tid\",\n    element: <Task/>\n  }\n]);\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <RouterProvider router = {router}/>\n    </div>\n  );\n}\n\n\n\nexport default App;\n",[],"/Users/alexkim/Databases/TaskMates/frontend/src/context/authContext.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/Navbar.jsx",["118"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/Footer.jsx",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Home.jsx",["119","120","121","122","123","124","125","126","127"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Login.jsx",["128"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/authContext\";\nimport Input from '@mui/material/Input';\nimport Typography from '@mui/material/Typography';\nimport Button from \"@mui/material/Button\";\n\nconst Login = () => {\n    const [inputs, setInputs] = useState({\n        email: \"\",\n        password: \"\",\n      });\n      const [err, setError] = useState(null);\n    \n      const navigate = useNavigate();\n    \n      const { login } = useContext(AuthContext);\n    \n    \n      const handleChange = (e) => {\n        setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n      };\n    \n      const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          await login(inputs)\n          navigate(\"/\");\n        } catch (err) {\n          setError(err.response.data);\n        }\n      };\n\n      return (\n        <div className=\"auth\">\n          <Typography variant=\"h2\">Login</Typography>\n          <form>\n            <Input\n              type=\"text\" required T\n              placeholder='Email'\n              className=\"app__form-element\"\n              name=\"email\"\n              onChange={handleChange}\n            />\n            <Input\n              type=\"password\" required T\n              placeholder=\"Password\"\n              name=\"password\"\n              className=\"app__form-element\"\n              onChange={handleChange}\n            />\n            <Button variant='outlined' className=\"app__form-element\" sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleSubmit}>Login</Button>\n            {err && <p>{err}</p>}\n            <span><Typography>\n              Don't have an account yet?\n            </Typography> <Link to=\"/register\" style={{textDecoration: 'none', color:\"purple\"}}><Typography variant=\"h5\">Register</Typography></Link></span>\n          </form>\n        </div>\n      )\n    }\n    \n\nexport default Login;","/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateOrg.jsx",["129"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Register.jsx",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Task.jsx",["130","131","132","133"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\"\n\nconst Task = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [task, setTask] = useState([]);\n\n    const orgId = location.pathname.split(\"/\")[2];\n    const taskId = location.pathname.split(\"/\")[4];\n\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const res = await axios.get(`/tasks/getTask/${taskId}`);\n            setTask(res.data);\n          } catch (err) {\n            console.log(err);\n          }\n        };\n        fetchData();\n      }, [taskId]);\n\n    \n    const handleAccept = async ()=>{\n      try {\n        await axios.post(`/tasks/accept/${taskId}`);\n        navigate(`/orgs/${orgId}/`)\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    const handleDelete = async ()=>{\n        try {\n          await axios.delete(`/tasks/${taskId}`);\n          navigate(`/orgs/${orgId}/`)\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    return (\n        <div>\n            {task.map((t) => (\n            <div key={t.taskID}> \n                <h1>Task: {t.task_name}</h1>\n                <label>Due on: {t.due_date}</label>\n                <span>description: {t.description}</span>\n                <button onClick={handleAccept}>Accept?</button>\n                <button onClick={handleDelete}>Delete</button>\n            </div>\n            ))}\n\n\n        </div>\n            \n    )\n}\n\nexport default AppWrap(Task, \"Task\");","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Profile.jsx",["134","135","136"],[],"import React from \"react\";\nimport Box from '@mui/material/Box';\nimport Button from \"@mui/material/Button\";\nimport Typography from '@mui/material/Typography';\nimport { AppWrap } from '../wrapper';\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Profile = () => {\n\n    const [post, setPost] = useState({});\n    const { currentUser, logout } = useContext(AuthContext);\n    const state = useLocation().state;\n    const [orgs, setOrgs] = useState([]);\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const res = await axios.get(`/orgs/`);\n                setOrgs(res.data);\n                const res2 = await axios.get(`/tasks/getUserTasks`);\n                setTasks(res2.data);\n\n\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        fetchData();\n    }, []);\n\n    const printDate = (dateString) => {\n        return new Date(dateString).toLocaleString();\n    }\n\n    return (\n        <Box className=\"app__container\" style={{ justifyContent: \"flex-start\", height: 'auto' }}>\n            {currentUser ? (\n                <div className=\"title-section\">\n                    <Typography variant=\"h2\" style={{ paddingBottom: '0rem' }} className=\"title-text app__profile-element\">{currentUser?.first_name} {currentUser?.last_name}</Typography>\n                    <Typography variant=\"h6\">User ID: {currentUser?.userID}</Typography>\n                </div>\n            ) : (\n                <Typography variant=\"h2\">Please login in order to view profile</Typography>\n            )}\n\n            {currentUser ? (\n                <div>\n                    <Typography variant=\"h4\" className=\"app__profile-element\"><u>Upcoming Tasks: </u></Typography>\n                    <div className=\"app__org-menu\">\n                        <ul>\n                        {tasks.map((task) => (\n                            <a href={`./${task.groupID}/task/${task.taskID}`} className=\"link\" key={task.taskID}>\n                            <li>\n                                <Typography variant=\"h5\" className=\"app__org\">{task.task_name} for {task.groupName}, due {printDate(task.due_date)}</Typography>\n                            </li>\n                            </a>\n                        ))}\n                        </ul>\n                    </div>\n\n                    <Typography variant=\"h4\" className=\"app__profile-element\"><u>Currently Involved Organizations: </u></Typography>\n                    <div className=\"app__profile-org-menu\">\n                        {orgs.map((org) => (\n                            <div>\n                            <a href={`/orgs/${org.groupID}`}  className=\"app__org link\">\n                                <Typography style={{color: 'black'}} variant=\"h4\" className=\"app__profile-org\"> {org.groupName}, </Typography>\n                            </a>\n                            </div>\n                        ))}\n                    </div>\n\n\n                    <Typography variant=\"h4\" className=\"app__profile-element\"><u>Email:</u> {currentUser?.email}</Typography>\n\n                    <Typography variant=\"h4\" className=\"app__profile-element\"><u>Phone Number:</u> {currentUser?.phone_number}</Typography>\n\n                    <div className=\"centerElements\">\n                        <Button variant=\"outlined\" sx={{ color: '#212121', borderColor: '#212121' }} className=\"app__section-element\" onClick={logout}>\n                            <Typography>Logout</Typography>\n                        </Button>\n                        <a href={`/editprofile/${currentUser.userID}`}>\n                        <Button variant=\"outlined\" sx={{ color: '#212121', borderColor: '#212121' }} className=\"app__section-element\" >\n                            <Typography>Update Profile</Typography>\n                        </Button>\n                        </a>\n                    </div>\n                    \n                        \n            </div>\n            \n            ) : (\n                <div className=\"centerElements\">\n                    <Typography variant=\"h5\" className=\"app__section-element\">*Login using the Login button in the Navbar or the button below</Typography>\n                    <Link className=\"link app__section-element\" to=\"/login\">\n                        <Button variant=\"outlined\" sx={{ color: '#212121', borderColor: '#212121' }} className=\"app__section-element\">\n                            <Typography>Login</Typography>\n                        </Button>\n                    </Link>\n                </div>\n            )}\n\n        </Box>\n    )\n}\n\nexport default AppWrap(Profile, \"Profile\");","/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx",["137","138","139","140","141","142","143"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\"\nimport { Button, Typography, Input } from \"@mui/material\";\n\nconst Organizations = () => {\n  const [org, setOrg] = useState({});\n  const [tasks, setTask] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [filterTasks, setFilterTask] = useState([]);\n  const [unfiltered, setUnfiltered] = useState(true);\n  const [userAdd, setUser] = useState([]);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const orgId = location.pathname.split(\"/\")[2];\n\n  const { currentUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/orgs/${orgId}`);\n        setOrg(res.data);\n        const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n        setTask(res1.data);\n        const groupUsers = await axios.get(`/orgs/${orgId}/getUsers`);\n        setMembers(groupUsers.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, [orgId]);\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n\n    try {\n      await axios.post(`/orgs/${orgId}/addUserToGroup`, {\n        userAdd, orgId,\n      })\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    setFilterTask(tasks);\n  }, [])\n\n  const downloadTasks = () => {\n    const texts = []\n    tasks.map((task) => {\n      texts.push(\"Task ID: \" + task.taskID + \"\\n\")\n      texts.push(\"Task name: \" + task.task_name + \"\\n\")\n      texts.push(\"Task Due Date: \" + task.due_date + \"\\n\")\n      texts.push(\"Task description: \" + task.description + \"\\n\\n\")\n    })\n    const file = new Blob(texts, { type: 'text/plain' })\n    const element = document.createElement(\"a\")\n    element.href = URL.createObjectURL(file)\n    element.download = \"tasks\" + Date.now() + \".txt\"\n    document.body.appendChild(element);\n    element.click()\n  }\n\n  const printDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  }\n\n  const reviseTasks = (e) => {\n    setUnfiltered(false);\n    tasks.sort(function(task1, task2){\n      return Number(new Date(task2.due_date)) - Number(new Date(task1.due_date));\n    }).reverse();\n    console.log(tasks)\n    if(e.target.id === \"all\"){\n      setFilterTask(tasks);\n    } else if(e.target.id === \"claimed\"){\n      setFilterTask(tasks.filter((task) => task.userID != null));\n    } else if(e.target.id === \"unclaimed\"){\n      setFilterTask(tasks.filter((task) => task.userID == null));\n    }\n  }\n\n  const sortTasks = (e) => {\n    \n  }\n\n  const readFile = async (e) => { \n    e.preventDefault() \n    const reader = new FileReader() \n    reader.onload = async (e) => { \n       const text = (e.target.result) \n       var result = text.split(\",\").map(function (value) {\n        return value.trim();\n      });\n       let i = 0\n       for (i in result) {\n        let userAdd = result[i]\n        try {\n          await axios.post(`/orgs/${orgId}/addUserToGroup`, {\n            userAdd, orgId,\n          })\n        } catch (err) {\n          console.log(err);\n        }\n       }\n    }; \n    reader.readAsText(e.target.files[0]) \n  }\n\n  const handleMakeAdmin = async (userID) => {\n    console.log(orgId)\n    try {\n      await axios.post(`/orgs/${orgId}/makeAdmin`, {\n        'groupID': orgId,\n        'userID': userID\n      });\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className=\"orgPage\">\n      <Typography variant='h2' style={{fontWeight: 700}}><u>{org.groupName}</u></Typography>\n      <form className=\"addUserForm\" style={{ marginTop: '24px' }}>\n        <Input\n            type=\"text\" required\n            placeholder='User ID'\n            onChange={(e) => setUser(e.target.value)}\n        />\n        <Button\n          variant='outlined' sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleClick}>Add Member\n        </Button>\n        \n      </form>\n      <div className = \"centerElements\">\n        <div>\n       Upload Users: <input type=\"file\" placeholder=\"Upload Users\" onChange={(e) => readFile(e)} />\n        </div>\n      </div>\n      <div style={{ display: 'flex', gap: '100px' }}>\n        <div style={{ flex: '1' }}>\n          <div className=\"centerElements\">\n            <Typography variant='h3'>Tasks</Typography>\n            <Link to=\"./createtask\">\n              <Button variant='outlined' className=\"app_task\">New Task</Button>\n            </Link>\n            <Button variant='outlined' className=\"app_task\" onClick={downloadTasks}>Download Tasks</Button>\n\n            <div>\n              <Button variant='outlined' className=\"app_task\" name=\"all\" id=\"all\" onClick={reviseTasks}>Show All Tasks (Sorted by Date)</Button>\n              <Button variant='outlined' className=\"app_task\" name=\"claimed\" id=\"claimed\" onClick={reviseTasks}>Show Claimed Tasks (Sorted by Date)</Button>\n              <Button variant='outlined' className=\"app_task\" name=\"unclaimed\" id=\"unclaimed\" onClick={reviseTasks}>Show Unclaimed Tasks (Sorted by Date)</Button>\n            </div>\n          </div>\n          \n          <div className=\"tasks\">\n            {unfiltered ? (\n              <>\n              {tasks.map((task) => (\n              <a href={`./${orgId}/task/${task.taskID}`} className=\"task\" key={task.taskID}>\n                <h2>{task.task_name}</h2>\n                <h4 style={{fontWeight: 'normal'}}>{task.description}</h4>\n                <h4 style={{fontWeight: 'normal'}}>Due: {printDate(task.due_date)}</h4>              \n              </a>\n              ))}\n              </>\n            ) : (\n              <>\n              {filterTasks.map((task) => (\n                <a href={`./${orgId}/task/${task.taskID}`} className=\"task\" key={task.taskID}>\n                  <h2>{task.task_name}</h2>\n                  <h4 style={{ fontWeight: 'normal' }}>{task.description}</h4>\n                  <h4 style={{ fontWeight: 'normal' }}>Due: {printDate(task.due_date)}</h4>\n                </a>\n              ))}\n              </>\n            )}\n          </div>\n        </div>\n        <div style={{ flex: '1' }}>\n          <div style={{display: 'flex', alignItems: 'center', margin: '14px 0'}}>\n            <h2>Members</h2>\n          </div>\n\n          <div className=\"members\" style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n            {members.map((member) => (\n            <div key={member.userID} onClick={ () => handleMakeAdmin(member.userID) } style={{ cursor: 'pointer', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '150px', width: '150px', borderRadius: '16px', backgroundColor: 'white', boxSizing: 'border-box', boxShadow: '0 2px 4px 0px lightgray', backgroundColor: member.adminID ? 'rgb(255, 251, 237)' : 'white' }}>\n              <div style={{ height: '46px', width: '46px', boxSizing: 'border-box', display: 'flex', alignItems: 'center', justifyContent: 'center', textAlign: 'center', borderRadius: '16px', border: '1.5px solid cornflowerblue', marginBottom: '4px', marginTop: '-4px' }}>\n                <span>{ member.first_name[0] }{ member.last_name[0] }</span>\n              </div>\n              <h3 style={{ textAlign: 'center', marginTop: '2px' }}>{ member.first_name } { member.last_name }</h3>\n            </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      \n    </div>\n  )\n}\n\nexport default AppWrap(Organizations, \"Organizations\");","/Users/alexkim/Databases/TaskMates/frontend/src/pages/CreateTask.jsx",["144"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/NotificationsPanel.jsx",["145"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/UserTodoList.jsx",["146","147","148","149"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/components/OrgTiles.jsx",["150","151","152","153"],[],"/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/index.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/wrapper/AppWrap.js",[],[],"/Users/alexkim/Databases/TaskMates/frontend/src/pages/EditProfile.jsx",["154","155","156"],[],"\nimport { AppWrap } from '../wrapper';\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/authContext\";\nimport axios from \"axios\";\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport Button from \"@mui/material/Button\";\n\nconst EditProfile = () => {\n\n    const location = useLocation();\n    const userID = location.pathname.split(\"/\")[2];\n\n    const [inputs, setInputs] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n    });\n    const [err, setError] = useState(null);\n\n    const navigate = useNavigate();\n    const { currentUser } = useContext(AuthContext);\n\n    const handleChange = e => {\n        setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n        //console.log(inputs)\n    };\n\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        try {\n            await axios.put(`../auth/${currentUser}`, inputs, );\n            //console.log(inputs)\n            navigate(\"/profile\");\n        } catch (err) {\n            console.log(inputs)\n            console.log(err.response.data)\n            setError(err.response.data)\n        }\n    }\n\n    return (\n        <div className=\"auth\">\n            <Typography variant=\"h2\">Edit Profile</Typography>\n            <form>\n                <Input\n                    type=\"text\" required T\n                    placeholder='First Name'\n                    className=\"app__form-element\"\n                    name=\"firstName\"\n                    onChange={handleChange}\n                />\n                <Input\n                    type=\"text\" required T\n                    placeholder='Last Name'\n                    className=\"app__form-element\"\n                    name=\"lastName\"\n                    onChange={handleChange}\n                />\n                <Input\n                    type=\"text\" required T\n                    placeholder='Email'\n                    className=\"app__form-element\"\n                    name=\"email\"\n                    onChange={handleChange}\n                />\n                <Input\n                    type=\"number\" required T\n                    placeholder='Phone Number'\n                    className=\"app__form-element\"\n                    name=\"phoneNumber\"\n                    onChange={handleChange}\n                />\n                <Input\n                    type=\"text\" required T\n                    placeholder='Password'\n                    className=\"app__form-element\"\n                    name=\"password\"\n                    onChange={handleChange}\n                />\n                <Button variant='outlined' className=\"app__form-element\" sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleSubmit}>Confirm Changes</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default AppWrap(EditProfile, \"EditProfile\");",{"ruleId":"157","severity":1,"message":"158","line":4,"column":3,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":5,"column":3,"nodeType":"159","messageId":"160","endLine":5,"endColumn":9},{"ruleId":"157","severity":1,"message":"162","line":9,"column":10,"nodeType":"159","messageId":"160","endLine":9,"endColumn":16},{"ruleId":"157","severity":1,"message":"163","line":9,"column":18,"nodeType":"159","messageId":"160","endLine":9,"endColumn":24},{"ruleId":"157","severity":1,"message":"164","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":17},{"ruleId":"157","severity":1,"message":"165","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"166","line":3,"column":16,"nodeType":"159","messageId":"160","endLine":3,"endColumn":27},{"ruleId":"157","severity":1,"message":"167","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":14},{"ruleId":"157","severity":1,"message":"168","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":18},{"ruleId":"157","severity":1,"message":"169","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":13},{"ruleId":"157","severity":1,"message":"170","line":15,"column":12,"nodeType":"159","messageId":"160","endLine":15,"endColumn":15},{"ruleId":"157","severity":1,"message":"171","line":15,"column":17,"nodeType":"159","messageId":"160","endLine":15,"endColumn":25},{"ruleId":"157","severity":1,"message":"172","line":16,"column":12,"nodeType":"159","messageId":"160","endLine":16,"endColumn":16},{"ruleId":"157","severity":1,"message":"173","line":17,"column":26,"nodeType":"159","messageId":"160","endLine":17,"endColumn":32},{"ruleId":"157","severity":1,"message":"174","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"173","line":13,"column":26,"nodeType":"159","messageId":"160","endLine":13,"endColumn":32},{"ruleId":"157","severity":1,"message":"165","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"157","severity":1,"message":"175","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":20},{"ruleId":"157","severity":1,"message":"176","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":21},{"ruleId":"157","severity":1,"message":"177","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":14},{"ruleId":"157","severity":1,"message":"178","line":14,"column":12,"nodeType":"159","messageId":"160","endLine":14,"endColumn":16},{"ruleId":"157","severity":1,"message":"179","line":14,"column":18,"nodeType":"159","messageId":"160","endLine":14,"endColumn":25},{"ruleId":"157","severity":1,"message":"180","line":16,"column":11,"nodeType":"159","messageId":"160","endLine":16,"endColumn":16},{"ruleId":"157","severity":1,"message":"177","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":14},{"ruleId":"157","severity":1,"message":"181","line":19,"column":9,"nodeType":"159","messageId":"160","endLine":19,"endColumn":17},{"ruleId":"157","severity":1,"message":"182","line":23,"column":11,"nodeType":"159","messageId":"160","endLine":23,"endColumn":22},{"ruleId":"183","severity":1,"message":"184","line":56,"column":6,"nodeType":"185","endLine":56,"endColumn":8,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":60,"column":22,"nodeType":"189","messageId":"190","endLine":60,"endColumn":24},{"ruleId":"157","severity":1,"message":"191","line":93,"column":9,"nodeType":"159","messageId":"160","endLine":93,"endColumn":18},{"ruleId":"192","severity":1,"message":"193","line":199,"column":349,"nodeType":"194","messageId":"195","endLine":199,"endColumn":364},{"ruleId":"157","severity":1,"message":"169","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":13},{"ruleId":"157","severity":1,"message":"175","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":27},{"ruleId":"157","severity":1,"message":"175","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":27},{"ruleId":"157","severity":1,"message":"165","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"166","line":3,"column":16,"nodeType":"159","messageId":"160","endLine":3,"endColumn":27},{"ruleId":"157","severity":1,"message":"167","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":14},{"ruleId":"157","severity":1,"message":"175","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":27},{"ruleId":"157","severity":1,"message":"165","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"166","line":3,"column":16,"nodeType":"159","messageId":"160","endLine":3,"endColumn":27},{"ruleId":"157","severity":1,"message":"167","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":14},{"ruleId":"157","severity":1,"message":"196","line":3,"column":17,"nodeType":"159","messageId":"160","endLine":3,"endColumn":26},{"ruleId":"157","severity":1,"message":"197","line":16,"column":11,"nodeType":"159","messageId":"160","endLine":16,"endColumn":17},{"ruleId":"157","severity":1,"message":"170","line":25,"column":12,"nodeType":"159","messageId":"160","endLine":25,"endColumn":15},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Outlet' is defined but never used.","'Footer' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'image' is defined but never used.","'err' is assigned a value but never used.","'setError' is assigned a value but never used.","'orgs' is assigned a value but never used.","'logout' is assigned a value but never used.","'axios' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'moment' is defined but never used.","'post' is assigned a value but never used.","'setPost' is assigned a value but never used.","'state' is assigned a value but never used.","'navigate' is assigned a value but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tasks'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterTask' needs the current value of 'tasks'.","ArrayExpression",["198"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'sortTasks' is assigned a value but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","'useEffect' is defined but never used.","'userID' is assigned a value but never used.",{"desc":"199","fix":"200"},"Update the dependencies array to be: [tasks]",{"range":"201","text":"202"},[1593,1595],"[tasks]"]