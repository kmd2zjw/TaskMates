{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\india\\\\Desktop\\\\CS4750Project\\\\TaskMates\\\\frontend\\\\src\\\\pages\\\\Organizations.jsx\",\n    _s = $RefreshSig$();\n\nEvent.target.files;\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\";\nimport { Button, Typography, Input } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Organizations = () => {\n  _s();\n\n  const [org, setOrg] = useState({});\n  const [tasks, setTask] = useState([]);\n  const [userAdd, setUser] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orgId = location.pathname.split(\"/\")[2];\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/orgs/${orgId}`);\n        setOrg(res.data);\n        const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n        setTask(res1.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [orgId]);\n\n  const handleClick = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.post(`/orgs/${orgId}/addUserToGroup`, {\n        userAdd,\n        orgId\n      });\n      navigate(`/orgs/${orgId}`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const downloadTasks = () => {\n    const texts = [];\n    tasks.map(task => {\n      texts.push(\"Task ID: \" + task.taskID + \"\\n\");\n      texts.push(\"Task name: \" + task.task_name + \"\\n\");\n      texts.push(\"Task Due Date: \" + task.due_date + \"\\n\");\n      texts.push(\"Task description: \" + task.description + \"\\n\\n\");\n    });\n    const file = new Blob(texts, {\n      type: 'text/plain'\n    });\n    const element = document.createElement(\"a\");\n    element.href = URL.createObjectURL(file);\n    element.download = \"tasks\" + Date.now() + \".txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  const printDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  readFile = async e => {\n    e.preventDefault();\n    const reader = new FileReader();\n\n    reader.onload = async e => {\n      const text = e.target.result;\n      console.log(text);\n      alert(text);\n    };\n\n    reader.readAsText(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orgPage\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      style: {\n        fontWeight: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: org.groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerElements\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./createtask\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: \"app_task\",\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        className: \"app_task\",\n        onClick: downloadTasks,\n        children: \"Download Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: \"app_task\",\n          onClick: downloadTasks,\n          children: \"Show All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: \"app_task\",\n          onClick: downloadTasks,\n          children: \"Show Claimed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: \"app_task\",\n          onClick: downloadTasks,\n          children: \"Show Unclaimed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `./${orgId}/task/${task.taskID}`,\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: task.task_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: 'normal'\n          },\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: 'normal'\n          },\n          children: [\"Due: \", printDate(task.due_date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, task.taskID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        required: true,\n        T: true,\n        placeholder: \"User ID\",\n        onChange: e => setUser(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        sx: {\n          color: '#212121',\n          borderColor: '#212121'\n        },\n        onClick: handleClick,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Organizations, \"zB/sXOcHfUE1ZWAlyYpuJz31YcQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Organizations;\nexport default _c2 = AppWrap(Organizations, \"Organizations\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Organizations\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/india/Desktop/CS4750Project/TaskMates/frontend/src/pages/Organizations.jsx"],"names":["Event","target","files","React","useEffect","useState","Link","useLocation","useNavigate","axios","AppWrap","useContext","AuthContext","moment","Button","Typography","Input","Organizations","org","setOrg","tasks","setTask","userAdd","setUser","location","navigate","orgId","pathname","split","currentUser","fetchData","res","get","data","res1","err","console","log","handleClick","e","preventDefault","post","downloadTasks","texts","map","task","push","taskID","task_name","due_date","description","file","Blob","type","element","document","createElement","href","URL","createObjectURL","download","Date","now","body","appendChild","click","printDate","dateString","toLocaleString","readFile","reader","FileReader","onload","text","result","alert","readAsText","fontWeight","groupName","value","color","borderColor"],"mappings":"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","sourcesContent":["Event.target.files \r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AppWrap } from '../wrapper';\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport moment from \"moment\"\r\nimport { Button, Typography, Input } from \"@mui/material\";\r\n\r\nconst Organizations = () => {\r\n    const [org, setOrg] = useState({});\r\n    const [tasks, setTask] = useState([]);\r\n    const [userAdd, setUser] = useState([]);\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n  \r\n    const orgId = location.pathname.split(\"/\")[2];\r\n  \r\n    const { currentUser } = useContext(AuthContext);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await axios.get(`/orgs/${orgId}`);\r\n          setOrg(res.data);\r\n          const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\r\n          setTask(res1.data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, [orgId]);\r\n\r\n    const handleClick = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      try {\r\n\r\n        await axios.post(`/orgs/${orgId}/addUserToGroup`, {\r\n              userAdd, orgId,\r\n            })\r\n          navigate(`/orgs/${orgId}`)\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n  };\r\n\r\n\r\n    const downloadTasks = () => {\r\n      const texts = []\r\n      tasks.map((task) => {\r\n        texts.push(\"Task ID: \" + task.taskID + \"\\n\")\r\n        texts.push(\"Task name: \" + task.task_name + \"\\n\")\r\n        texts.push(\"Task Due Date: \" + task.due_date + \"\\n\")\r\n        texts.push(\"Task description: \" + task.description + \"\\n\\n\")\r\n      })\r\n      const file = new Blob(texts, {type: 'text/plain'})\r\n      const element = document.createElement(\"a\")\r\n      element.href = URL.createObjectURL(file)\r\n      element.download = \"tasks\" + Date.now() + \".txt\"\r\n      document.body.appendChild(element);\r\n      element.click()\r\n    }\r\n\r\n    const printDate = (dateString) => {\r\n      return new Date(dateString).toLocaleString();\r\n    }\r\n\r\n    readFile = async (e) => { \r\n      e.preventDefault() \r\n      const reader = new FileReader() \r\n      reader.onload = async (e) => { \r\n         const text = (e.target.result) \r\n         console.log(text) \r\n         alert(text) \r\n      }; \r\n      reader.readAsText(e.target.files[0]) \r\n    }\r\n\r\n    return (\r\n      <div className=\"orgPage\">\r\n        <Typography variant='h2' style={{fontWeight: 700}}><u>{org.groupName}</u></Typography>\r\n\r\n        <div className=\"centerElements\">\r\n          <Typography variant='h3'>Tasks</Typography>\r\n          <Link to=\"./createtask\">\r\n            <Button variant='outlined' className=\"app_task\">New Task</Button>\r\n          </Link>\r\n          <Button variant='outlined' className=\"app_task\" onClick={downloadTasks}>Download Tasks</Button>\r\n\r\n          <div>\r\n          <Button variant='outlined' className=\"app_task\" onClick={downloadTasks}>Show All Tasks</Button>\r\n          <Button variant='outlined' className=\"app_task\" onClick={downloadTasks}>Show Claimed Tasks</Button>\r\n          <Button variant='outlined' className=\"app_task\" onClick={downloadTasks}>Show Unclaimed Tasks</Button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"tasks\">\r\n          {tasks.map((task) => (\r\n          <a href={`./${orgId}/task/${task.taskID}`} className=\"task\" key={task.taskID}>\r\n            <h2>{task.task_name}</h2>\r\n            <h4 style={{fontWeight: 'normal'}}>{task.description}</h4>\r\n            <h4 style={{fontWeight: 'normal'}}>Due: {printDate(task.due_date)}</h4>              \r\n          </a>\r\n          ))}\r\n        </div>\r\n        <form>\r\n                <Input\r\n                   type=\"text\" required T\r\n                    placeholder='User ID'\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                />\r\n                <Button\r\n                  variant='outlined' sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleClick}>Add User\r\n                </Button>\r\n\r\n            </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AppWrap(Organizations, \"Organizations\");"]},"metadata":{},"sourceType":"module"}