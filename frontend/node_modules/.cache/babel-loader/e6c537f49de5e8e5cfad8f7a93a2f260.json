{"ast":null,"code":"var _jsxFileName = \"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\";\nimport { Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Organizations = () => {\n  _s();\n\n  const [org, setOrg] = useState({});\n  const [tasks, setTask] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orgId = location.pathname.split(\"/\")[2];\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/orgs/${orgId}`);\n        setOrg(res.data);\n        const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n        setTask(res1.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [orgId]);\n\n  const downloadTasks = () => {\n    const texts = [];\n    tasks.map(task => {\n      texts.push(\"Task ID: \" + task.taskID + \"\\n\");\n      texts.push(\"Task name: \" + task.task_name + \"\\n\");\n      texts.push(\"Task Due Date: \" + task.due_date + \"\\n\");\n      texts.push(\"Task description: \" + task.description + \"\\n\\n\");\n    });\n    const file = new Blob(texts, {\n      type: 'text/plain'\n    });\n    const element = document.createElement(\"a\");\n    element.href = URL.createObjectURL(file);\n    element.download = \"tasks\" + Date.now() + \".txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orgPage\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      style: {\n        fontWeight: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: org.groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./createtask\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: \"app_task\",\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        style: {\n          margin: '14px'\n        },\n        onClick: downloadTasks,\n        children: \"Download Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: downloadTasks,\n        children: \"Download Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `./${orgId}/task/${task.taskID}`,\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: task.task_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: 'normal'\n          },\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: 'normal'\n          },\n          children: [\"Due \", task.due_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, task.taskID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Organizations, \"eqs1Cu9xrOPNfeDVq/F8xfb5tvQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Organizations;\nexport default _c2 = AppWrap(Organizations, \"Organizations\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Organizations\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx"],"names":["React","useEffect","useState","Link","useLocation","useNavigate","axios","AppWrap","useContext","AuthContext","moment","Button","Typography","Organizations","org","setOrg","tasks","setTask","location","navigate","orgId","pathname","split","currentUser","fetchData","res","get","data","res1","err","console","log","downloadTasks","texts","map","task","push","taskID","task_name","due_date","description","file","Blob","type","element","document","createElement","href","URL","createObjectURL","download","Date","now","body","appendChild","click","fontWeight","groupName","display","alignItems","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\"\nimport { Button, Typography } from \"@mui/material\";\n\nconst Organizations = () => {\n    const [org, setOrg] = useState({});\n    const [tasks, setTask] = useState([]);\n\n    const location = useLocation();\n    const navigate = useNavigate();\n  \n    const orgId = location.pathname.split(\"/\")[2];\n  \n    const { currentUser } = useContext(AuthContext);\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const res = await axios.get(`/orgs/${orgId}`);\n          setOrg(res.data);\n          const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n          setTask(res1.data);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      fetchData();\n    }, [orgId]);\n\n    const downloadTasks = () => {\n      const texts = []\n      tasks.map((task) => {\n        texts.push(\"Task ID: \" + task.taskID + \"\\n\")\n        texts.push(\"Task name: \" + task.task_name + \"\\n\")\n        texts.push(\"Task Due Date: \" + task.due_date + \"\\n\")\n        texts.push(\"Task description: \" + task.description + \"\\n\\n\")\n      })\n      const file = new Blob(texts, {type: 'text/plain'})\n      const element = document.createElement(\"a\")\n      element.href = URL.createObjectURL(file)\n      element.download = \"tasks\" + Date.now() + \".txt\"\n      document.body.appendChild(element);\n      element.click()\n    }\n\n    return (\n      <div className=\"orgPage\">\n        <Typography variant='h2' style={{fontWeight: 700}}><u>{org.groupName}</u></Typography>\n\n        <div style={{display: 'flex', alignItems: 'center'}}>\n          <Typography variant='h3'>Tasks</Typography>\n          <Link to=\"./createtask\">\n            <Button variant='outlined' className=\"app_task\">New Task</Button>\n          </Link>\n          <Button variant='outlined' style={{margin: '14px'}} onClick={downloadTasks}>Download Tasks</Button>\n\n          <Button variant='outlined' onClick={downloadTasks}>Download Tasks</Button>\n        </div>\n        \n        <div className=\"tasks\">\n          {tasks.map((task) => (\n          <a href={`./${orgId}/task/${task.taskID}`} className=\"task\" key={task.taskID}>\n            <h2>{task.task_name}</h2>\n            <h4 style={{fontWeight: 'normal'}}>{task.description}</h4>\n            <h4 style={{fontWeight: 'normal'}}>Due {task.due_date}</h4>              \n          </a>\n          ))}\n        </div>\n      </div>\n    )\n}\n\nexport default AppWrap(Organizations, \"Organizations\");"]},"metadata":{},"sourceType":"module"}