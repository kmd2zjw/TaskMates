{"ast":null,"code":"var _jsxFileName = \"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Box from '@mui/material/Box';\nimport Button from \"@mui/material/Button\";\nimport Typography from '@mui/material/Typography';\nimport { AppWrap } from '../wrapper';\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const {\n    currentUser,\n    logout\n  } = useContext(AuthContext);\n  const [orgs, setOrgs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        constres = await axios.get(`/orgs/`);\n        setOrgs(res.data);\n        console.log(res.data);\n        const res2 = await axios.get(`/tasks/getUserTasks`);\n        setTasks(res2.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  });\n\n  const getOrg = e => {\n    console.log(e);\n    res.forEach(async org => {\n      if (org.groupID == e) {\n        return org.groupName;\n      }\n    });\n  };\n\n  console.log();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"app__container\",\n    style: {\n      justifyContent: \"flex-start\"\n    },\n    children: [currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-section\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        style: {\n          paddingBottom: '0rem'\n        },\n        className: \"title-text app__profile-element\",\n        children: [currentUser === null || currentUser === void 0 ? void 0 : currentUser.first_name, \" \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"User ID: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.userID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Please login in order to view profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: \"app__profile-element\",\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Upcoming Tasks: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__org-menu\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"script\", {\n            children: [\"console.log(typeof \", task.due_date, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: \"app__org\",\n            children: [task.task_name, \" (\", task.due_date, \") for \", getOrg(task.orgId), \", \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: \"app__profile-element\",\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Currently Involved Organizations: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__profile-org-menu\",\n        children: orgs.map(org => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            className: \"app__profile-org\",\n            children: [\" \", org.groupName, \", \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: \"app__profile-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 79\n        }, this), \" \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: \"app__profile-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 79\n        }, this), \" \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.phone_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centerElements\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            color: '#212121',\n            borderColor: '#212121'\n          },\n          className: \"app__section-element\",\n          onClick: logout,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerElements\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: \"app__section-element\",\n        children: \"*Login using the Login button in the Navbar or the button below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link app__section-element\",\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            color: '#212121',\n            borderColor: '#212121'\n          },\n          className: \"app__section-element\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"y4hswQpVJY9Q3yzkLNZ2XmPTQqk=\");\n\n_c = Profile;\nexport default _c2 = AppWrap(Profile, \"Profile\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Profile\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/alexkim/Databases/TaskMates/frontend/src/pages/Profile.jsx"],"names":["React","Box","Button","Typography","AppWrap","axios","useEffect","useState","useContext","AuthContext","Link","Profile","currentUser","logout","orgs","setOrgs","tasks","setTasks","fetchData","constres","get","res","data","console","log","res2","err","getOrg","e","forEach","org","groupID","groupName","justifyContent","paddingBottom","first_name","last_name","userID","map","task","due_date","task_name","orgId","email","phone_number","color","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Box from '@mui/material/Box';\nimport Button from \"@mui/material/Button\";\nimport Typography from '@mui/material/Typography';\nimport { AppWrap } from '../wrapper';\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = () => {\n\n    const { currentUser, logout } = useContext(AuthContext);\n\n    const [orgs, setOrgs] = useState([]);\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                constres = await axios.get(`/orgs/`);\n                setOrgs(res.data);\n                console.log(res.data);\n                const res2 = await axios.get(`/tasks/getUserTasks`);\n\n                setTasks(res2.data);\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        fetchData();\n    });\n\n    const getOrg = (e) => {\n        console.log(e);\n        res.forEach(async (org) => {\n            if(org.groupID == e){\n                return org.groupName;\n            }\n          });\n    };\n\n    console.log()\n\n    return (\n        <Box className=\"app__container\" style={{ justifyContent: \"flex-start\" }}>\n            {currentUser ? (\n                <div className=\"title-section\">\n                    <Typography variant=\"h2\" style={{ paddingBottom: '0rem' }} className=\"title-text app__profile-element\">{currentUser?.first_name} {currentUser?.last_name}</Typography>\n                    <Typography variant=\"h6\">User ID: {currentUser?.userID}</Typography>\n                </div>\n            ) : (\n                <Typography variant=\"h2\">Please login in order to view profile</Typography>\n            )}\n\n            {currentUser ? (\n                <div>\n                    <Typography variant=\"h4\" className=\"app__profile-element\"><u>Upcoming Tasks: </u></Typography>\n                    <div className=\"app__org-menu\">\n                        {tasks.map((task) => (\n                            <div>\n                                <script>console.log(typeof {task.due_date})</script>\n                                <Typography variant=\"h5\" className=\"app__org\">{task.task_name} ({task.due_date}) for {getOrg(task.orgId)}, </Typography>\n                            </div>\n                        ))}\n                    </div>\n\n                    <Typography variant=\"h4\" className=\"app__profile-element\"><u>Currently Involved Organizations: </u></Typography>\n                    <div className=\"app__profile-org-menu\">\n                        {orgs.map((org) => (\n                            <div>\n                                <Typography variant=\"h4\" className=\"app__profile-org\"> {org.groupName}, </Typography>\n                            </div>\n                        ))}\n                    </div>\n\n\n                    <Typography variant=\"h4\" className=\"app__profile-element\"><u>Email:</u> {currentUser?.email}</Typography>\n\n                    <Typography variant=\"h4\" className=\"app__profile-element\"><u>Phone Number:</u> {currentUser?.phone_number}</Typography>\n\n                    <div className=\"centerElements\">\n                        <Button variant=\"outlined\" sx={{ color: '#212121', borderColor: '#212121' }} className=\"app__section-element\" onClick={logout}>\n                            <Typography>Logout</Typography>\n                        </Button>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"centerElements\">\n                    <Typography variant=\"h5\" className=\"app__section-element\">*Login using the Login button in the Navbar or the button below</Typography>\n                    <Link className=\"link app__section-element\" to=\"/login\">\n                        <Button variant=\"outlined\" sx={{ color: '#212121', borderColor: '#212121' }} className=\"app__section-element\">\n                            <Typography>Login</Typography>\n                        </Button>\n                    </Link>\n                </div>\n            )}\n\n        </Box>\n    )\n}\n\nexport default AppWrap(Profile, \"Profile\");"]},"metadata":{},"sourceType":"module"}