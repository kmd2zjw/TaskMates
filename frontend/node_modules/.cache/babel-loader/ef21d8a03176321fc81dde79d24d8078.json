{"ast":null,"code":"import * as React from 'react';\nimport useMessageBus from '../utils/useMessageBus';\nconst SELECTION_CHANGE_TOPIC = 'select:change-selection';\nconst HIGHLIGHT_CHANGE_TOPIC = 'select:change-highlight';\n/**\r\n * @ignore - internal hook.\r\n *\r\n * This hook is used to notify any interested components about changes in the Select's selection and highlight.\r\n */\n\nexport default function useSelectChangeNotifiers() {\n  const messageBus = useMessageBus();\n  const notifySelectionChanged = React.useCallback(newSelectedItems => {\n    messageBus.publish(SELECTION_CHANGE_TOPIC, newSelectedItems);\n  }, [messageBus]);\n  const notifyHighlightChanged = React.useCallback(newHighlightedItem => {\n    messageBus.publish(HIGHLIGHT_CHANGE_TOPIC, newHighlightedItem);\n  }, [messageBus]);\n  const registerSelectionChangeHandler = React.useCallback(handler => {\n    return messageBus.subscribe(SELECTION_CHANGE_TOPIC, handler);\n  }, [messageBus]);\n  const registerHighlightChangeHandler = React.useCallback(handler => {\n    return messageBus.subscribe(HIGHLIGHT_CHANGE_TOPIC, handler);\n  }, [messageBus]);\n  return {\n    notifySelectionChanged,\n    notifyHighlightChanged,\n    registerSelectionChangeHandler,\n    registerHighlightChangeHandler\n  };\n}","map":{"version":3,"sources":["C:/Users/india/Desktop/CS4750Project/TaskMates/frontend/node_modules/@mui/base/useList/useListChangeNotifiers.js"],"names":["React","useMessageBus","SELECTION_CHANGE_TOPIC","HIGHLIGHT_CHANGE_TOPIC","useSelectChangeNotifiers","messageBus","notifySelectionChanged","useCallback","newSelectedItems","publish","notifyHighlightChanged","newHighlightedItem","registerSelectionChangeHandler","handler","subscribe","registerHighlightChangeHandler"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,MAAMC,sBAAsB,GAAG,yBAA/B;AACA,MAAMC,sBAAsB,GAAG,yBAA/B;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,wBAAT,GAAoC;AACjD,QAAMC,UAAU,GAAGJ,aAAa,EAAhC;AACA,QAAMK,sBAAsB,GAAGN,KAAK,CAACO,WAAN,CAAkBC,gBAAgB,IAAI;AACnEH,IAAAA,UAAU,CAACI,OAAX,CAAmBP,sBAAnB,EAA2CM,gBAA3C;AACD,GAF8B,EAE5B,CAACH,UAAD,CAF4B,CAA/B;AAGA,QAAMK,sBAAsB,GAAGV,KAAK,CAACO,WAAN,CAAkBI,kBAAkB,IAAI;AACrEN,IAAAA,UAAU,CAACI,OAAX,CAAmBN,sBAAnB,EAA2CQ,kBAA3C;AACD,GAF8B,EAE5B,CAACN,UAAD,CAF4B,CAA/B;AAGA,QAAMO,8BAA8B,GAAGZ,KAAK,CAACO,WAAN,CAAkBM,OAAO,IAAI;AAClE,WAAOR,UAAU,CAACS,SAAX,CAAqBZ,sBAArB,EAA6CW,OAA7C,CAAP;AACD,GAFsC,EAEpC,CAACR,UAAD,CAFoC,CAAvC;AAGA,QAAMU,8BAA8B,GAAGf,KAAK,CAACO,WAAN,CAAkBM,OAAO,IAAI;AAClE,WAAOR,UAAU,CAACS,SAAX,CAAqBX,sBAArB,EAA6CU,OAA7C,CAAP;AACD,GAFsC,EAEpC,CAACR,UAAD,CAFoC,CAAvC;AAGA,SAAO;AACLC,IAAAA,sBADK;AAELI,IAAAA,sBAFK;AAGLE,IAAAA,8BAHK;AAILG,IAAAA;AAJK,GAAP;AAMD","sourcesContent":["import * as React from 'react';\r\nimport useMessageBus from '../utils/useMessageBus';\r\nconst SELECTION_CHANGE_TOPIC = 'select:change-selection';\r\nconst HIGHLIGHT_CHANGE_TOPIC = 'select:change-highlight';\r\n/**\r\n * @ignore - internal hook.\r\n *\r\n * This hook is used to notify any interested components about changes in the Select's selection and highlight.\r\n */\r\nexport default function useSelectChangeNotifiers() {\r\n  const messageBus = useMessageBus();\r\n  const notifySelectionChanged = React.useCallback(newSelectedItems => {\r\n    messageBus.publish(SELECTION_CHANGE_TOPIC, newSelectedItems);\r\n  }, [messageBus]);\r\n  const notifyHighlightChanged = React.useCallback(newHighlightedItem => {\r\n    messageBus.publish(HIGHLIGHT_CHANGE_TOPIC, newHighlightedItem);\r\n  }, [messageBus]);\r\n  const registerSelectionChangeHandler = React.useCallback(handler => {\r\n    return messageBus.subscribe(SELECTION_CHANGE_TOPIC, handler);\r\n  }, [messageBus]);\r\n  const registerHighlightChangeHandler = React.useCallback(handler => {\r\n    return messageBus.subscribe(HIGHLIGHT_CHANGE_TOPIC, handler);\r\n  }, [messageBus]);\r\n  return {\r\n    notifySelectionChanged,\r\n    notifyHighlightChanged,\r\n    registerSelectionChangeHandler,\r\n    registerHighlightChangeHandler\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}