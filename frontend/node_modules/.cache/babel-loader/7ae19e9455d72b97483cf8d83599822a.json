{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kcarl\\\\Documents\\\\Project_CS4750\\\\TaskMates\\\\frontend\\\\src\\\\pages\\\\CreateTask.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport Button from \"@mui/material/Button\";\nimport image from \"../img/4907157.jpg\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTask = () => {\n  _s();\n\n  const state = useLocation().state;\n  const [name, setName] = useState((state === null || state === void 0 ? void 0 : state.name) || \"\");\n  const [description, setDescription] = useState((state === null || state === void 0 ? void 0 : state.description) || \"\");\n  const [dueDate, setDueDate] = useState(new Date());\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orgId = location.pathname.split(\"/\")[2];\n\n  const handleClick = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.post(`/tasks/addTask`, {\n        name,\n        description,\n        date: moment(dueDate).format(\"YYYY-MM-DD HH:mm:ss\"),\n        orgId\n      });\n      navigate(`/orgs/${orgId}`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"80vh\",\n        flexDirection: 'column',\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Create a New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            required: true,\n            T: true,\n            placeholder: \"Task Name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            required: true,\n            T: true,\n            placeholder: \"Task Description\",\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          showTimeSelect: true,\n          dateFormat: \"MMMM d, yyyy h:mmaa\",\n          selected: dueDate,\n          selectsStart: true,\n          minDate: Date.now(),\n          onChange: date => setDueDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 2\n          },\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            sx: {\n              color: '#212121',\n              borderColor: '#212121'\n            },\n            onClick: handleClick,\n            children: \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateTask, \"erc7BPIGMB3DX25IXNT+56xcL38=\", false, function () {\n  return [useLocation, useLocation, useNavigate];\n});\n\n_c = CreateTask;\nexport default _c2 = AppWrap(CreateTask, 'CreateTask');\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateTask\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/kcarl/Documents/Project_CS4750/TaskMates/frontend/src/pages/CreateTask.jsx"],"names":["React","useState","useLocation","useNavigate","axios","AppWrap","Box","Typography","Input","Button","image","DatePicker","moment","CreateTask","state","name","setName","description","setDescription","dueDate","setDueDate","Date","location","navigate","orgId","pathname","split","handleClick","e","preventDefault","post","date","format","err","console","log","display","justifyContent","alignItems","minHeight","flexDirection","overflow","pt","target","value","now","color","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,KAAK,GAAGZ,WAAW,GAAGY,KAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAAa,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,KAAe,EAAhB,CAAhC;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,CAAAa,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,WAAP,KAAsB,EAAvB,CAA9C;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,IAAIoB,IAAJ,EAAD,CAAtC;AAEA,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMqB,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMqB,KAAK,GAAGF,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAd;;AAEA,QAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,YAAMzB,KAAK,CAAC0B,IAAN,CAAY,gBAAZ,EAA6B;AAC/Bf,QAAAA,IAD+B;AACzBE,QAAAA,WADyB;AACZc,QAAAA,IAAI,EAAEnB,MAAM,CAACO,OAAD,CAAN,CAAgBa,MAAhB,CAAuB,qBAAvB,CADM;AACyCR,QAAAA;AADzC,OAA7B,CAAN;AAGAD,MAAAA,QAAQ,CAAE,SAAQC,KAAM,EAAhB,CAAR;AACH,KALD,CAKE,OAAOS,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACJ,GAVD;;AAYA,sBACI,QAAC,GAAD;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACG,QAAAA,OAAO,EAAC,MAAT;AACRC,QAAAA,cAAc,EAAC,QADP;AAERC,QAAAA,UAAU,EAAC,QAFH;AAGRC,QAAAA,SAAS,EAAC,MAHF;AAIRC,QAAAA,aAAa,EAAC,QAJN;AAKRC,QAAAA,QAAQ,EAAE;AALF,OAAZ;AAAA,8BAQI,QAAC,UAAD;AAAa,QAAA,OAAO,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAACC,YAAAA,EAAE,EAAE;AAAL,WAAT;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,IAAI,EAAC,MADT;AACgB,YAAA,QAAQ,MADxB;AACyB,YAAA,CAAC,MAD1B;AAEI,YAAA,WAAW,EAAC,WAFhB;AAGI,YAAA,QAAQ,EAAGd,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACe,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAACF,YAAAA,EAAE,EAAE;AAAL,WAAT;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,IAAI,EAAC,MADT;AACgB,YAAA,QAAQ,MADxB;AACyB,YAAA,CAAC,MAD1B;AAEI,YAAA,WAAW,EAAC,kBAFhB;AAGI,YAAA,QAAQ,EAAGd,CAAD,IAAOV,cAAc,CAACU,CAAC,CAACe,MAAF,CAASC,KAAV;AAHnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAgBI,QAAC,UAAD;AACI,UAAA,cAAc,MADlB;AAEI,UAAA,UAAU,EAAC,qBAFf;AAGI,UAAA,QAAQ,EAAEzB,OAHd;AAII,UAAA,YAAY,MAJhB;AAKI,UAAA,OAAO,EAAIE,IAAI,CAACwB,GAAL,EALf;AAMI,UAAA,QAAQ,EAAEd,IAAI,IAAIX,UAAU,CAACW,IAAD;AANhC;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAyBI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAACW,YAAAA,EAAE,EAAE;AAAL,WAAT;AAAkB,UAAA,SAAS,EAAC,QAA5B;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAA2B,YAAA,EAAE,EAAE;AAAEI,cAAAA,KAAK,EAAE,SAAT;AAAoBC,cAAAA,WAAW,EAAE;AAAjC,aAA/B;AAA6E,YAAA,OAAO,EAAEpB,WAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH,CAlED;;GAAMd,U;UACYX,W,EAKGA,W,EACAC,W;;;KAPfU,U;AAoEN,qBAAeR,OAAO,CAACQ,UAAD,EAAa,YAAb,CAAtB","sourcesContent":["import React, {useState} from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AppWrap } from '../wrapper';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Input from '@mui/material/Input';\r\nimport Button from \"@mui/material/Button\";\r\nimport image from \"../img/4907157.jpg\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\"\r\n\r\nconst CreateTask = () => {\r\n    const state = useLocation().state;\r\n    const [name, setName] = useState(state?.name || \"\");\r\n    const [description, setDescription] = useState(state?.description || \"\");\r\n    const [dueDate, setDueDate] = useState(new Date());\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const orgId = location.pathname.split(\"/\")[2];\r\n    \r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post(`/tasks/addTask`, {\r\n                name, description, date: moment(dueDate).format(\"YYYY-MM-DD HH:mm:ss\"), orgId,\r\n              })\r\n            navigate(`/orgs/${orgId}`)\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Box style={{display:\"flex\",\r\n                justifyContent:\"center\",\r\n                alignItems:\"center\",\r\n                minHeight:\"80vh\",\r\n                flexDirection:'column',\r\n                overflow: \"hidden\",\r\n            }}>\r\n\r\n                <Typography  variant=\"h4\">Create a New Task</Typography>\r\n                <form>\r\n                    <Box sx={{pt: 8}}>\r\n                        <Input\r\n                            type=\"text\" required T\r\n                            placeholder='Task Name'\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </Box>\r\n                    <Box sx={{pt: 2}}>\r\n                        <Input\r\n                            type=\"text\" required T\r\n                            placeholder='Task Description'\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </Box>\r\n\r\n                    <DatePicker\r\n                        showTimeSelect\r\n                        dateFormat=\"MMMM d, yyyy h:mmaa\"\r\n                        selected={dueDate}\r\n                        selectsStart\r\n                        minDate = {Date.now()}\r\n                        onChange={date => setDueDate(date)}\r\n                    />\r\n\r\n                    <Box sx={{pt: 2}} className=\"button\">\r\n                        <Button variant='outlined' sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleClick}>Create Task</Button>\r\n                    </Box>\r\n                </form>\r\n            </Box>\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\nexport default AppWrap(CreateTask, 'CreateTask');"]},"metadata":{},"sourceType":"module"}