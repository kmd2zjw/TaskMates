{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\india\\\\Desktop\\\\CS4750Project\\\\TaskMates\\\\frontend\\\\src\\\\pages\\\\Organizations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Organizations = () => {\n  _s();\n\n  const [org, setOrg] = useState({});\n  const [tasks, setTask] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orgId = location.pathname.split(\"/\")[2];\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/orgs/${orgId}`);\n        setOrg(res.data);\n        const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n        setTask(res1.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [orgId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orgPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: org.groupName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./createtask\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          style: {\n            margin: '14px'\n          },\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `./task/${task.taskID}`,\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: task.task_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: 'normal'\n          },\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: 'normal'\n          },\n          children: [\"Due \", task.due_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, task.taskID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Organizations, \"eqs1Cu9xrOPNfeDVq/F8xfb5tvQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Organizations;\nexport default _c2 = AppWrap(Organizations, \"Organizations\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Organizations\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/india/Desktop/CS4750Project/TaskMates/frontend/src/pages/Organizations.jsx"],"names":["React","useEffect","useState","Link","useLocation","useNavigate","axios","AppWrap","useContext","AuthContext","moment","Button","Organizations","org","setOrg","tasks","setTask","location","navigate","orgId","pathname","split","currentUser","fetchData","res","get","data","res1","err","console","log","groupName","display","alignItems","margin","map","task","taskID","task_name","fontWeight","description","due_date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AppWrap } from '../wrapper';\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport moment from \"moment\"\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst Organizations = () => {\r\n    const [org, setOrg] = useState({});\r\n    const [tasks, setTask] = useState([]);\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n  \r\n    const orgId = location.pathname.split(\"/\")[2];\r\n  \r\n    const { currentUser } = useContext(AuthContext);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await axios.get(`/orgs/${orgId}`);\r\n          setOrg(res.data);\r\n          const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\r\n          setTask(res1.data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, [orgId]);\r\n\r\n    return (\r\n      <div className=\"orgPage\">\r\n        <h1>{org.groupName}</h1>\r\n\r\n        <div style={{display: 'flex', alignItems: 'center'}}>\r\n          <h2>Tasks</h2>\r\n          <Link to=\"./createtask\">\r\n            <Button variant='outlined' style={{margin: '14px'}}>New Task</Button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"tasks\">\r\n          {tasks.map((task) => (\r\n          <a href={`./task/${task.taskID}`} className=\"task\" key={task.taskID}>\r\n            <h2>{task.task_name}</h2>\r\n            <h4 style={{fontWeight: 'normal'}}>{task.description}</h4>\r\n            <h4 style={{fontWeight: 'normal'}}>Due {task.due_date}</h4>              \r\n          </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AppWrap(Organizations, \"Organizations\");"]},"metadata":{},"sourceType":"module"}