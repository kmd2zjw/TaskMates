{"ast":null,"code":"var _jsxFileName = \"/Users/alexkim/Databases/TaskMates/frontend/src/components/UserTodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Typography from '@mui/material/Typography';\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserTodoList = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/tasks/getUserTasks`);\n        setTasks(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const printDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UserTodoList\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"Your TODO List: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"todoTask\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"name\",\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"u\", {\n          children: task.task_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 43\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"name\",\n        children: [\"  Due: \", printDate(task.due_date), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"name\",\n        children: [\"  Description \", task.description, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, task.taskID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserTodoList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = UserTodoList;\nexport default UserTodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTodoList\");","map":{"version":3,"sources":["/Users/alexkim/Databases/TaskMates/frontend/src/components/UserTodoList.jsx"],"names":["React","useContext","useState","useEffect","Link","useLocation","axios","Typography","Button","UserTodoList","tasks","setTasks","fetchData","res","get","data","err","console","log","printDate","dateString","Date","toLocaleString","map","task","task_name","due_date","description","taskID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,qBAAX,CAAlB;AAEAH,QAAAA,QAAQ,CAACE,GAAG,CAACE,IAAL,CAAR;AACD,OAJD,CAIE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KARD;;AASAJ,IAAAA,SAAS;AACV,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMO,SAAS,GAAIC,UAAD,IAAgB;AAChC,WAAO,IAAIC,IAAJ,CAASD,UAAT,EAAqBE,cAArB,EAAP;AACH,GAFC;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGZ,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACT,QAAC,UAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA,8BACE,QAAC,UAAD;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA,sCAAgC;AAAA,oBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA,8BAAsCN,SAAS,CAACK,IAAI,CAACE,QAAN,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA,qCAA6CF,IAAI,CAACG,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAuCH,IAAI,CAACI,MAA5C;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAMnB,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Typography from '@mui/material/Typography';\nimport Button from \"@mui/material/Button\";\n\nconst UserTodoList = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/tasks/getUserTasks`);\n        \n        setTasks(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const printDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n}\n\n  return (\n    <div className=\"UserTodoList\">\n      <Typography variant=\"h3\">Your TODO List: </Typography>\n      {tasks.map((task) => (\n        <Typography  className=\"todoTask\" key={task.taskID}>\n          <Typography  className=\"name\">  <u>{task.task_name}</u> </Typography >\n          <Typography  className=\"name\">  Due: {printDate(task.due_date)} </Typography >\n          <Typography  className=\"name\">  Description {task.description} </Typography >\n        </Typography >\n      ))}\n    </div>\n  );\n}\n\nexport default UserTodoList;"]},"metadata":{},"sourceType":"module"}