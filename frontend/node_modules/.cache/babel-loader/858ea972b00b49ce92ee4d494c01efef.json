{"ast":null,"code":"var _jsxFileName = \"/Users/mdodson/git/TaskMates2/frontend/src/pages/Organizations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Organizations = () => {\n  _s();\n\n  const [org, setOrg] = useState({});\n  const [tasks, setTask] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orgId = location.pathname.split(\"/\")[2];\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/orgs/${orgId}`);\n        setOrg(res.data);\n        const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n        setTask(res1.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [orgId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orgPage\",\n    children: [\"Organizations This is org page.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" GroupID: \", org.groupID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" GroupName: \", org.groupName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"./createtask\",\n      children: \"click here to make a task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `./task/${task.taskID}`,\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: task.task_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: 'normal'\n          },\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Due \", task.due_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, task.taskID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Organizations, \"eqs1Cu9xrOPNfeDVq/F8xfb5tvQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Organizations;\nexport default _c2 = AppWrap(Organizations, \"Organizations\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Organizations\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mdodson/git/TaskMates2/frontend/src/pages/Organizations.jsx"],"names":["React","useEffect","useState","Link","useLocation","useNavigate","axios","AppWrap","useContext","AuthContext","moment","Organizations","org","setOrg","tasks","setTask","location","navigate","orgId","pathname","split","currentUser","fetchData","res","get","data","res1","err","console","log","groupID","groupName","map","task","taskID","task_name","fontWeight","description","due_date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACY,KAAD,EAAQC,OAAR,IAAmBb,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAMa,KAAK,GAAGF,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAd;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAkBb,UAAU,CAACC,WAAD,CAAlC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,SAAQN,KAAM,EAAzB,CAAlB;AACAL,QAAAA,MAAM,CAACU,GAAG,CAACE,IAAL,CAAN;AACA,cAAMC,IAAI,GAAG,MAAMpB,KAAK,CAACkB,GAAN,CAAW,wBAAuBN,KAAM,EAAxC,CAAnB;AACAH,QAAAA,OAAO,CAACW,IAAI,CAACD,IAAN,CAAP;AACD,OALD,CAKE,OAAOE,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KATD;;AAUAL,IAAAA,SAAS;AACV,GAZQ,EAYN,CAACJ,KAAD,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,+DAEE;AAAA,+BAAgBN,GAAG,CAACkB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iCAAkBlB,GAAG,CAACmB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGjB,KAAK,CAACkB,GAAN,CAAWC,IAAD,iBACX;AAAG,QAAA,IAAI,EAAG,UAASA,IAAI,CAACC,MAAO,EAA/B;AAAkC,QAAA,SAAS,EAAC,MAA5C;AAAA,gCACE;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE;AAAb,WAAX;AAAA,oBAAoCH,IAAI,CAACI;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,6BAASJ,IAAI,CAACK,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAwDL,IAAI,CAACC,MAA7D;AAAA;AAAA;AAAA;AAAA,cADC;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBH,CA7CD;;GAAMvB,a;UAIeP,W,EACAC,W;;;KALfM,a;AA+CN,qBAAeJ,OAAO,CAACI,aAAD,EAAgB,eAAhB,CAAtB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\"\n\nconst Organizations = () => {\n    const [org, setOrg] = useState({});\n    const [tasks, setTask] = useState([]);\n\n    const location = useLocation();\n    const navigate = useNavigate();\n  \n    const orgId = location.pathname.split(\"/\")[2];\n  \n    const { currentUser } = useContext(AuthContext);\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const res = await axios.get(`/orgs/${orgId}`);\n          setOrg(res.data);\n          const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n          setTask(res1.data);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      fetchData();\n    }, [orgId]);\n\n    return (\n      <div className=\"orgPage\">Organizations\n        This is org page.\n        <div> GroupID: {org.groupID}</div>\n        <div> GroupName: {org.groupName}</div>\n        <Link to=\"./createtask\">\n          click here to make a task\n        </Link>\n        <h1>Tasks</h1>\n        <div className=\"tasks\">\n          {tasks.map((task) => (\n          <a href={`./task/${task.taskID}`} className=\"task\" key={task.taskID}>\n            <h2>{task.task_name}</h2>\n            <h4 style={{fontWeight: 'normal'}}>{task.description}</h4>\n            <h4>Due {task.due_date}</h4>              \n          </a>\n          ))}\n        </div>\n      </div>\n    )\n}\n\nexport default AppWrap(Organizations, \"Organizations\");"]},"metadata":{},"sourceType":"module"}