{"ast":null,"code":"var _jsxFileName = \"/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Organizations = () => {\n  _s();\n\n  const [org, setOrg] = useState({});\n  const [tasks, setTask] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orgId = location.pathname.split(\"/\")[2];\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/orgs/${orgId}`);\n        setOrg(res.data);\n        const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n        setTask(res1.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n    console.log(org);\n  }, [orgId]);\n\n  const handleAccept = async () => {\n    try {\n      await axios.post(`/tasks/accept`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Organizations This is org page.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" GroupID: \", org.groupID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" GroupName: \", org.groupName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"./createtask\",\n      children: \"click here to make a task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GROUP TASKS:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"org\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Title: \", task.task_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Description: \", task.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Due on: \", task.due_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAccept,\n        children: \"Click to accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)]\n    }, task.taskID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Organizations, \"eqs1Cu9xrOPNfeDVq/F8xfb5tvQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Organizations;\nexport default Organizations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Organizations\");","map":{"version":3,"sources":["/Users/alexkim/Databases/TaskMates/frontend/src/pages/Organizations.jsx"],"names":["React","useEffect","useState","Link","useLocation","useNavigate","axios","useContext","AuthContext","moment","Organizations","org","setOrg","tasks","setTask","location","navigate","orgId","pathname","split","currentUser","fetchData","res","get","data","res1","err","console","log","handleAccept","post","groupID","groupName","map","task","task_name","description","due_date","taskID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACW,KAAD,EAAQC,OAAR,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,KAAK,GAAGF,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAd;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAkBb,UAAU,CAACC,WAAD,CAAlC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,SAAQN,KAAM,EAAzB,CAAlB;AACAL,QAAAA,MAAM,CAACU,GAAG,CAACE,IAAL,CAAN;AACA,cAAMC,IAAI,GAAG,MAAMnB,KAAK,CAACiB,GAAN,CAAW,wBAAuBN,KAAM,EAAxC,CAAnB;AACAH,QAAAA,OAAO,CAACW,IAAI,CAACD,IAAN,CAAP;AACD,OALD,CAKE,OAAOE,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KATD;;AAUAL,IAAAA,SAAS;AACTM,IAAAA,OAAO,CAACC,GAAR,CAAYjB,GAAZ;AACD,GAbQ,EAaN,CAACM,KAAD,CAbM,CAAT;;AAeA,QAAMY,YAAY,GAAG,YAAU;AAC7B,QAAI;AACF,YAAMvB,KAAK,CAACwB,IAAN,CAAY,eAAZ,CAAN;AACD,KAFD,CAEE,OAAOJ,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAND;;AAQA,sBACI;AAAA,+DAEI;AAAA,+BAAgBf,GAAG,CAACoB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,iCAAkBpB,GAAG,CAACqB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAQKnB,KAAK,CAACoB,GAAN,CAAWC,IAAD,iBACX;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,8BAAYA,IAAI,CAACC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,oCAAkBD,IAAI,CAACE,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,+BAAaF,IAAI,CAACG,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAER,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAA0BK,IAAI,CAACI,MAA/B;AAAA;AAAA;AAAA;AAAA,YADC,CARL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAvDD;;GAAM5B,a;UAIeN,W,EACAC,W;;;KALfK,a;AAyDN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\"\n\nconst Organizations = () => {\n    const [org, setOrg] = useState({});\n    const [tasks, setTask] = useState([]);\n\n    const location = useLocation();\n    const navigate = useNavigate();\n  \n    const orgId = location.pathname.split(\"/\")[2];\n  \n    const { currentUser } = useContext(AuthContext);\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const res = await axios.get(`/orgs/${orgId}`);\n          setOrg(res.data);\n          const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n          setTask(res1.data);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      fetchData();\n      console.log(org)\n    }, [orgId]);\n\n    const handleAccept = async ()=>{\n      try {\n        await axios.post(`/tasks/accept`);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return (\n        <div>Organizations\n            This is org page.\n            <div> GroupID: {org.groupID}</div>\n            <div> GroupName: {org.groupName}</div>\n            <Link to=\"./createtask\">\n                click here to make a task\n            </Link>\n            <h1>GROUP TASKS:</h1>\n            {tasks.map((task) => (\n            <div className=\"org\" key={task.taskID}>\n              <h2>Title: {task.task_name}</h2>\n              <h4>Description: {task.description}</h4>\n              <h4>Due on: {task.due_date}</h4>\n              <button onClick={handleAccept}>Click to accept</button>\n            </div>\n            ))}\n\n        </div>\n\n    )\n}\n\nexport default Organizations"]},"metadata":{},"sourceType":"module"}