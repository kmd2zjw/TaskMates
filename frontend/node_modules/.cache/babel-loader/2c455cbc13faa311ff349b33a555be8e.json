{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\india\\\\Desktop\\\\CS4750Project\\\\TaskMates\\\\frontend\\\\src\\\\pages\\\\Organizations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\";\nimport { Button, Typography, Input } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Organizations = () => {\n  _s();\n\n  const [org, setOrg] = useState({});\n  const [tasks, setTask] = useState([]);\n  const [filterTasks, setFilterTask] = useState([]);\n  const [unfiltered, setUnfiltered] = useState(true);\n  const [userAdd, setUser] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orgId = location.pathname.split(\"/\")[2];\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/orgs/${orgId}`);\n        setOrg(res.data);\n        const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n        setTask(res1.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [orgId]);\n\n  const handleClick = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.post(`/orgs/${orgId}/addUserToGroup`, {\n        userAdd,\n        orgId\n      });\n      navigate(`/orgs/${orgId}`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    setFilterTask(tasks);\n  }, []);\n\n  const downloadTasks = () => {\n    const texts = [];\n    tasks.map(task => {\n      texts.push(\"Task ID: \" + task.taskID + \"\\n\");\n      texts.push(\"Task name: \" + task.task_name + \"\\n\");\n      texts.push(\"Task Due Date: \" + task.due_date + \"\\n\");\n      texts.push(\"Task description: \" + task.description + \"\\n\\n\");\n    });\n    const file = new Blob(texts, {\n      type: 'text/plain'\n    });\n    const element = document.createElement(\"a\");\n    element.href = URL.createObjectURL(file);\n    element.download = \"tasks\" + Date.now() + \".txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  const printDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  const reviseTasks = e => {\n    setUnfiltered(false);\n    tasks.sort(function (task1, task2) {\n      return Number(new Date(task2.due_date)) - Number(new Date(task1.due_date));\n    }).reverse();\n    console.log(tasks);\n\n    if (e.target.id === \"all\") {\n      setFilterTask(tasks);\n    } else if (e.target.id === \"claimed\") {\n      setFilterTask(tasks.filter(task => task.userID != null));\n    } else if (e.target.id === \"unclaimed\") {\n      setFilterTask(tasks.filter(task => task.userID == null));\n    }\n  };\n\n  const sortTasks = e => {};\n\n  const readFile = async e => {\n    e.preventDefault();\n    const reader = new FileReader();\n\n    reader.onload = async e => {\n      const text = e.target.result;\n      var result = text.split(\",\").map(function (value) {\n        return value.trim();\n      });\n      let i = 0;\n\n      for (i in result) {\n        let userAdd = result[i];\n\n        try {\n          await axios.post(`/orgs/${orgId}/addUserToGroup`, {\n            userAdd,\n            orgId\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    reader.readAsText(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orgPage\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      style: {\n        fontWeight: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: org.groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerElements\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./createtask\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: \"app_task\",\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        className: \"app_task\",\n        onClick: downloadTasks,\n        children: \"Download Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: \"app_task\",\n          name: \"all\",\n          id: \"all\",\n          onClick: reviseTasks,\n          children: \"Show All Tasks (Sorted by Date)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: \"app_task\",\n          name: \"claimed\",\n          id: \"claimed\",\n          onClick: reviseTasks,\n          children: \"Show Claimed Tasks (Sorted by Date)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: \"app_task\",\n          name: \"unclaimed\",\n          id: \"unclaimed\",\n          onClick: reviseTasks,\n          children: \"Show Unclaimed Tasks (Sorted by Date)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: unfiltered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `./${orgId}/task/${task.taskID}`,\n          className: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: task.task_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 'normal'\n            },\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 'normal'\n            },\n            children: [\"Due: \", printDate(task.due_date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, task.taskID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: filterTasks.map(task => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `./${orgId}/task/${task.taskID}`,\n          className: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: task.task_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 'normal'\n            },\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 'normal'\n            },\n            children: [\"Due: \", printDate(task.due_date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, task.taskID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"addUserForm\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        required: true,\n        T: true,\n        placeholder: \"User ID\",\n        onChange: e => setUser(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        sx: {\n          color: '#212121',\n          borderColor: '#212121'\n        },\n        onClick: handleClick,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => readFile(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Organizations, \"IvRdWfdoET7WMrNyLA91dUkq2uQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Organizations;\nexport default _c2 = AppWrap(Organizations, \"Organizations\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Organizations\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/india/Desktop/CS4750Project/TaskMates/frontend/src/pages/Organizations.jsx"],"names":["React","useEffect","useState","Link","useLocation","useNavigate","axios","AppWrap","useContext","AuthContext","moment","Button","Typography","Input","Organizations","org","setOrg","tasks","setTask","filterTasks","setFilterTask","unfiltered","setUnfiltered","userAdd","setUser","location","navigate","orgId","pathname","split","currentUser","fetchData","res","get","data","res1","err","console","log","handleClick","e","preventDefault","post","downloadTasks","texts","map","task","push","taskID","task_name","due_date","description","file","Blob","type","element","document","createElement","href","URL","createObjectURL","download","Date","now","body","appendChild","click","printDate","dateString","toLocaleString","reviseTasks","sort","task1","task2","Number","reverse","target","id","filter","userID","sortTasks","readFile","reader","FileReader","onload","text","result","value","trim","i","readAsText","files","fontWeight","groupName","color","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,KAA7B,QAA0C,eAA1C;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACe,KAAD,EAAQC,OAAR,IAAmBhB,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACiB,WAAD,EAAcC,aAAd,IAA+BlB,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACqB,OAAD,EAAUC,OAAV,IAAqBtB,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAMuB,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,QAAMsB,KAAK,GAAGF,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAd;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAkBtB,UAAU,CAACC,WAAD,CAAlC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM8B,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAW,SAAQN,KAAM,EAAzB,CAAlB;AACAX,QAAAA,MAAM,CAACgB,GAAG,CAACE,IAAL,CAAN;AACA,cAAMC,IAAI,GAAG,MAAM7B,KAAK,CAAC2B,GAAN,CAAW,wBAAuBN,KAAM,EAAxC,CAAnB;AACAT,QAAAA,OAAO,CAACiB,IAAI,CAACD,IAAN,CAAP;AAED,OAND,CAME,OAAOE,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KAVD;;AAWAL,IAAAA,SAAS;AACV,GAbQ,EAaN,CAACJ,KAAD,CAbM,CAAT;;AAeA,QAAMY,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI;AACF,YAAMnC,KAAK,CAACoC,IAAN,CAAY,SAAQf,KAAM,iBAA1B,EAA4C;AAChDJ,QAAAA,OADgD;AACvCI,QAAAA;AADuC,OAA5C,CAAN;AAGAD,MAAAA,QAAQ,CAAE,SAAQC,KAAM,EAAhB,CAAR;AACD,KALD,CAKE,OAAOS,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAXD;;AAaAnC,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,aAAa,CAACH,KAAD,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAM0B,aAAa,GAAG,MAAM;AAC1B,UAAMC,KAAK,GAAG,EAAd;AACA3B,IAAAA,KAAK,CAAC4B,GAAN,CAAWC,IAAD,IAAU;AAClBF,MAAAA,KAAK,CAACG,IAAN,CAAW,cAAcD,IAAI,CAACE,MAAnB,GAA4B,IAAvC;AACAJ,MAAAA,KAAK,CAACG,IAAN,CAAW,gBAAgBD,IAAI,CAACG,SAArB,GAAiC,IAA5C;AACAL,MAAAA,KAAK,CAACG,IAAN,CAAW,oBAAoBD,IAAI,CAACI,QAAzB,GAAoC,IAA/C;AACAN,MAAAA,KAAK,CAACG,IAAN,CAAW,uBAAuBD,IAAI,CAACK,WAA5B,GAA0C,MAArD;AACD,KALD;AAMA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAST,KAAT,EAAgB;AAAEU,MAAAA,IAAI,EAAE;AAAR,KAAhB,CAAb;AACA,UAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAhB;AACAF,IAAAA,OAAO,CAACG,IAAR,GAAeC,GAAG,CAACC,eAAJ,CAAoBR,IAApB,CAAf;AACAG,IAAAA,OAAO,CAACM,QAAR,GAAmB,UAAUC,IAAI,CAACC,GAAL,EAAV,GAAuB,MAA1C;AACAP,IAAAA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0BV,OAA1B;AACAA,IAAAA,OAAO,CAACW,KAAR;AACD,GAdD;;AAgBA,QAAMC,SAAS,GAAIC,UAAD,IAAgB;AAChC,WAAO,IAAIN,IAAJ,CAASM,UAAT,EAAqBC,cAArB,EAAP;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAI9B,CAAD,IAAO;AACzBlB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAL,IAAAA,KAAK,CAACsD,IAAN,CAAW,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;AAC/B,aAAOC,MAAM,CAAC,IAAIZ,IAAJ,CAASW,KAAK,CAACvB,QAAf,CAAD,CAAN,GAAmCwB,MAAM,CAAC,IAAIZ,IAAJ,CAASU,KAAK,CAACtB,QAAf,CAAD,CAAhD;AACD,KAFD,EAEGyB,OAFH;AAGAtC,IAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ;;AACA,QAAGuB,CAAC,CAACoC,MAAF,CAASC,EAAT,KAAgB,KAAnB,EAAyB;AACvBzD,MAAAA,aAAa,CAACH,KAAD,CAAb;AACD,KAFD,MAEO,IAAGuB,CAAC,CAACoC,MAAF,CAASC,EAAT,KAAgB,SAAnB,EAA6B;AAClCzD,MAAAA,aAAa,CAACH,KAAK,CAAC6D,MAAN,CAAchC,IAAD,IAAUA,IAAI,CAACiC,MAAL,IAAe,IAAtC,CAAD,CAAb;AACD,KAFM,MAEA,IAAGvC,CAAC,CAACoC,MAAF,CAASC,EAAT,KAAgB,WAAnB,EAA+B;AACpCzD,MAAAA,aAAa,CAACH,KAAK,CAAC6D,MAAN,CAAchC,IAAD,IAAUA,IAAI,CAACiC,MAAL,IAAe,IAAtC,CAAD,CAAb;AACD;AACF,GAbD;;AAeA,QAAMC,SAAS,GAAIxC,CAAD,IAAO,CAExB,CAFD;;AAIA,QAAMyC,QAAQ,GAAG,MAAOzC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMyC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAO5C,CAAP,IAAa;AAC1B,YAAM6C,IAAI,GAAI7C,CAAC,CAACoC,MAAF,CAASU,MAAvB;AACA,UAAIA,MAAM,GAAGD,IAAI,CAACxD,KAAL,CAAW,GAAX,EAAgBgB,GAAhB,CAAoB,UAAU0C,KAAV,EAAiB;AACjD,eAAOA,KAAK,CAACC,IAAN,EAAP;AACD,OAFa,CAAb;AAGA,UAAIC,CAAC,GAAG,CAAR;;AACA,WAAKA,CAAL,IAAUH,MAAV,EAAkB;AACjB,YAAI/D,OAAO,GAAG+D,MAAM,CAACG,CAAD,CAApB;;AACA,YAAI;AACF,gBAAMnF,KAAK,CAACoC,IAAN,CAAY,SAAQf,KAAM,iBAA1B,EAA4C;AAChDJ,YAAAA,OADgD;AACvCI,YAAAA;AADuC,WAA5C,CAAN;AAGD,SAJD,CAIE,OAAOS,GAAP,EAAY;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACD;AACH,KAhBD;;AAiBA8C,IAAAA,MAAM,CAACQ,UAAP,CAAkBlD,CAAC,CAACoC,MAAF,CAASe,KAAT,CAAe,CAAf,CAAlB;AACF,GArBA;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAhC;AAAA,6BAAmD;AAAA,kBAAI7E,GAAG,CAAC8E;AAAR;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,SAAS,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,SAAS,EAAC,UAArC;AAAgD,QAAA,OAAO,EAAElD,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAOE;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,SAAS,EAAC,UAArC;AAAgD,UAAA,IAAI,EAAC,KAArD;AAA2D,UAAA,EAAE,EAAC,KAA9D;AAAoE,UAAA,OAAO,EAAE2B,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,SAAS,EAAC,UAArC;AAAgD,UAAA,IAAI,EAAC,SAArD;AAA+D,UAAA,EAAE,EAAC,SAAlE;AAA4E,UAAA,OAAO,EAAEA,WAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,SAAS,EAAC,UAArC;AAAgD,UAAA,IAAI,EAAC,WAArD;AAAiE,UAAA,EAAE,EAAC,WAApE;AAAgF,UAAA,OAAO,EAAEA,WAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAiBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGjD,UAAU,gBACT;AAAA,kBACCJ,KAAK,CAAC4B,GAAN,CAAWC,IAAD,iBACX;AAAG,UAAA,IAAI,EAAG,KAAInB,KAAM,SAAQmB,IAAI,CAACE,MAAO,EAAxC;AAA2C,UAAA,SAAS,EAAC,MAArD;AAAA,kCACE;AAAA,sBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAE;AAAC2C,cAAAA,UAAU,EAAE;AAAb,aAAX;AAAA,sBAAoC9C,IAAI,CAACK;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAE;AAACyC,cAAAA,UAAU,EAAE;AAAb,aAAX;AAAA,gCAAyCzB,SAAS,CAACrB,IAAI,CAACI,QAAN,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAAiEJ,IAAI,CAACE,MAAtE;AAAA;AAAA;AAAA;AAAA,gBADC;AADD,uBADS,gBAWT;AAAA,kBACC7B,WAAW,CAAC0B,GAAZ,CAAiBC,IAAD,iBACf;AAAG,UAAA,IAAI,EAAG,KAAInB,KAAM,SAAQmB,IAAI,CAACE,MAAO,EAAxC;AAA2C,UAAA,SAAS,EAAC,MAArD;AAAA,kCACE;AAAA,sBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAE;AAAE2C,cAAAA,UAAU,EAAE;AAAd,aAAX;AAAA,sBAAsC9C,IAAI,CAACK;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAE;AAAEyC,cAAAA,UAAU,EAAE;AAAd,aAAX;AAAA,gCAA2CzB,SAAS,CAACrB,IAAI,CAACI,QAAN,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAAiEJ,IAAI,CAACE,MAAtE;AAAA;AAAA;AAAA;AAAA,gBADD;AADD;AAZJ;AAAA;AAAA;AAAA;AAAA,YAjBF,eAwCE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,8BACE,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AACgB,QAAA,QAAQ,MADxB;AACyB,QAAA,CAAC,MAD1B;AAEI,QAAA,WAAW,EAAC,SAFhB;AAGI,QAAA,QAAQ,EAAGR,CAAD,IAAOhB,OAAO,CAACgB,CAAC,CAACoC,MAAF,CAASW,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,UADV;AACqB,QAAA,EAAE,EAAE;AAAEO,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,WAAW,EAAE;AAAjC,SADzB;AACuE,QAAA,OAAO,EAAExD,WADhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGC,CAAD,IAAOyC,QAAQ,CAACzC,CAAD;AAA5C;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CAlKD;;GAAM1B,a;UAOaV,W,EACAC,W;;;KARbS,a;AAoKN,qBAAeP,OAAO,CAACO,aAAD,EAAgB,eAAhB,CAAtB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AppWrap } from '../wrapper';\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport moment from \"moment\"\r\nimport { Button, Typography, Input } from \"@mui/material\";\r\n\r\nconst Organizations = () => {\r\n  const [org, setOrg] = useState({});\r\n  const [tasks, setTask] = useState([]);\r\n  const [filterTasks, setFilterTask] = useState([]);\r\n  const [unfiltered, setUnfiltered] = useState(true);\r\n  const [userAdd, setUser] = useState([]);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const orgId = location.pathname.split(\"/\")[2];\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(`/orgs/${orgId}`);\r\n        setOrg(res.data);\r\n        const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\r\n        setTask(res1.data);\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [orgId]);\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await axios.post(`/orgs/${orgId}/addUserToGroup`, {\r\n        userAdd, orgId,\r\n      })\r\n      navigate(`/orgs/${orgId}`)\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilterTask(tasks);\r\n  }, [])\r\n\r\n  const downloadTasks = () => {\r\n    const texts = []\r\n    tasks.map((task) => {\r\n      texts.push(\"Task ID: \" + task.taskID + \"\\n\")\r\n      texts.push(\"Task name: \" + task.task_name + \"\\n\")\r\n      texts.push(\"Task Due Date: \" + task.due_date + \"\\n\")\r\n      texts.push(\"Task description: \" + task.description + \"\\n\\n\")\r\n    })\r\n    const file = new Blob(texts, { type: 'text/plain' })\r\n    const element = document.createElement(\"a\")\r\n    element.href = URL.createObjectURL(file)\r\n    element.download = \"tasks\" + Date.now() + \".txt\"\r\n    document.body.appendChild(element);\r\n    element.click()\r\n  }\r\n\r\n  const printDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString();\r\n  }\r\n\r\n  const reviseTasks = (e) => {\r\n    setUnfiltered(false);\r\n    tasks.sort(function(task1, task2){\r\n      return Number(new Date(task2.due_date)) - Number(new Date(task1.due_date));\r\n    }).reverse();\r\n    console.log(tasks)\r\n    if(e.target.id === \"all\"){\r\n      setFilterTask(tasks);\r\n    } else if(e.target.id === \"claimed\"){\r\n      setFilterTask(tasks.filter((task) => task.userID != null));\r\n    } else if(e.target.id === \"unclaimed\"){\r\n      setFilterTask(tasks.filter((task) => task.userID == null));\r\n    }\r\n  }\r\n\r\n  const sortTasks = (e) => {\r\n    \r\n  }\r\n\r\n  const readFile = async (e) => { \r\n    e.preventDefault() \r\n    const reader = new FileReader() \r\n    reader.onload = async (e) => { \r\n       const text = (e.target.result) \r\n       var result = text.split(\",\").map(function (value) {\r\n        return value.trim();\r\n      });\r\n       let i = 0\r\n       for (i in result) {\r\n        let userAdd = result[i]\r\n        try {\r\n          await axios.post(`/orgs/${orgId}/addUserToGroup`, {\r\n            userAdd, orgId,\r\n          })\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n       }\r\n    }; \r\n    reader.readAsText(e.target.files[0]) \r\n } \r\n\r\n  return (\r\n    <div className=\"orgPage\">\r\n      <Typography variant='h2' style={{fontWeight: 700}}><u>{org.groupName}</u></Typography>\r\n\r\n      <div className=\"centerElements\">\r\n        <Typography variant='h3'>Tasks</Typography>\r\n        <Link to=\"./createtask\">\r\n          <Button variant='outlined' className=\"app_task\">New Task</Button>\r\n        </Link>\r\n        <Button variant='outlined' className=\"app_task\" onClick={downloadTasks}>Download Tasks</Button>\r\n\r\n        <div>\r\n          <Button variant='outlined' className=\"app_task\" name=\"all\" id=\"all\" onClick={reviseTasks}>Show All Tasks (Sorted by Date)</Button>\r\n          <Button variant='outlined' className=\"app_task\" name=\"claimed\" id=\"claimed\" onClick={reviseTasks}>Show Claimed Tasks (Sorted by Date)</Button>\r\n          <Button variant='outlined' className=\"app_task\" name=\"unclaimed\" id=\"unclaimed\" onClick={reviseTasks}>Show Unclaimed Tasks (Sorted by Date)</Button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"tasks\">\r\n        {unfiltered ? (\r\n          <>\r\n          {tasks.map((task) => (\r\n          <a href={`./${orgId}/task/${task.taskID}`} className=\"task\" key={task.taskID}>\r\n            <h2>{task.task_name}</h2>\r\n            <h4 style={{fontWeight: 'normal'}}>{task.description}</h4>\r\n            <h4 style={{fontWeight: 'normal'}}>Due: {printDate(task.due_date)}</h4>              \r\n          </a>\r\n          ))}\r\n          </>\r\n        ) : (\r\n          <>\r\n          {filterTasks.map((task) => (\r\n            <a href={`./${orgId}/task/${task.taskID}`} className=\"task\" key={task.taskID}>\r\n              <h2>{task.task_name}</h2>\r\n              <h4 style={{ fontWeight: 'normal' }}>{task.description}</h4>\r\n              <h4 style={{ fontWeight: 'normal' }}>Due: {printDate(task.due_date)}</h4>\r\n            </a>\r\n          ))}\r\n          </>\r\n        )}\r\n      </div>\r\n      <form className=\"addUserForm\">\r\n        <Input\r\n            type=\"text\" required T\r\n            placeholder='User ID'\r\n            onChange={(e) => setUser(e.target.value)}\r\n        />\r\n        <Button\r\n          variant='outlined' sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleClick}>Add User\r\n        </Button>\r\n        <input type=\"file\" onChange={(e) => readFile(e)} />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppWrap(Organizations, \"Organizations\");"]},"metadata":{},"sourceType":"module"}