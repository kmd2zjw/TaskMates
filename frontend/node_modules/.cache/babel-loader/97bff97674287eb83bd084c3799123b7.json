{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kcarl\\\\Documents\\\\Project_CS4750\\\\TaskMates\\\\frontend\\\\src\\\\pages\\\\Organizations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppWrap } from '../wrapper';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Organizations = () => {\n  _s();\n\n  var _state;\n\n  const [org, setOrg] = useState({});\n  const [tasks, setTask] = useState([]);\n  const [name, setName] = useState(((_state = state) === null || _state === void 0 ? void 0 : _state.name) || \"\");\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orgId = location.pathname.split(\"/\")[2];\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/orgs/${orgId}`);\n        setOrg(res.data);\n        const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\n        setTask(res1.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [orgId]);\n\n  const handleClick = async e => {\n    e.preventDefault();\n\n    try {\n      // state\n\n      /*?*/\n      await axios.post(`/orgs/addUserToGroup`, {\n        name,\n        userID\n      }); // : await axios.post(`/org/create`, {\n      //     name,\n      //   });\n\n      navigate(\"/home\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orgPage\",\n    children: [\"Organizations This is org page.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" GroupID: \", org.groupID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" GroupName: \", org.groupName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"./createtask\",\n      children: \"click here to make a task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GROUP TASKS:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Title: \", task.task_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Description: \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Due on: \", task.due_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `./task/${task.taskID}`,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, task.taskID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          required: true,\n          T: true,\n          placeholder: \"User ID\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            color: '#212121',\n            borderColor: '#212121'\n          },\n          onClick: handleClick,\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Organizations, \"V3clniNM/yk4vYxPIrltR5arYxg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Organizations;\nexport default _c2 = AppWrap(Organizations, \"Organizations\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Organizations\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/kcarl/Documents/Project_CS4750/TaskMates/frontend/src/pages/Organizations.jsx"],"names":["React","useEffect","useState","Link","useLocation","useNavigate","axios","AppWrap","useContext","AuthContext","moment","Organizations","org","setOrg","tasks","setTask","name","setName","state","location","navigate","orgId","pathname","split","currentUser","fetchData","res","get","data","res1","err","console","log","handleClick","e","preventDefault","post","userID","groupID","groupName","map","task","task_name","description","due_date","taskID","pt","target","value","color","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AppWrap } from '../wrapper';\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport moment from \"moment\"\r\n\r\nconst Organizations = () => {\r\n    const [org, setOrg] = useState({});\r\n    const [tasks, setTask] = useState([]);\r\n    const [name, setName] = useState(state?.name || \"\");\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n  \r\n    const orgId = location.pathname.split(\"/\")[2];\r\n  \r\n    const { currentUser } = useContext(AuthContext);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await axios.get(`/orgs/${orgId}`);\r\n          setOrg(res.data);\r\n          const res1 = await axios.get(`/tasks/getGroupTasks/${orgId}`);\r\n          setTask(res1.data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, [orgId]);\r\n\r\n    const handleClick = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      try {\r\n        // state\r\n          /*?*/ await axios.post(`/orgs/addUserToGroup`, {\r\n              name, userID,\r\n            })\r\n          // : await axios.post(`/org/create`, {\r\n          //     name,\r\n          //   });\r\n          navigate(\"/home\")\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n  };\r\n\r\n    return (\r\n        <div className=\"orgPage\">Organizations\r\n            This is org page.\r\n            <div> GroupID: {org.groupID}</div>\r\n            <div> GroupName: {org.groupName}</div>\r\n            <Link to=\"./createtask\">\r\n                click here to make a task\r\n            </Link>\r\n            <h1>GROUP TASKS:</h1>\r\n            <div className=\"tasks\">\r\n              {tasks.map((task) => (\r\n              <div className=\"task\" key={task.taskID}>\r\n                <h2>Title: {task.task_name}</h2>\r\n                <h4>Description: {task.description}</h4>\r\n                <h4>Due on: {task.due_date}</h4>\r\n                <button>\r\n                 <Link to={`./task/${task.taskID}`}>\r\n                      View\r\n                  </Link>\r\n                </button>\r\n              </div>\r\n              ))}\r\n\r\n            </div>\r\n            \r\n          <form>\r\n            <Box sx={{pt: 8}}>\r\n                <Input\r\n                   type=\"text\" required T\r\n                    placeholder='User ID'\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <Button\r\n                  variant='outlined' sx={{ color: '#212121', borderColor: '#212121' }} onClick={handleClick}>Add User\r\n                </Button>\r\n            </Box>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AppWrap(Organizations, \"Organizations\");"]},"metadata":{},"sourceType":"module"}